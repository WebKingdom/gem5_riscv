[
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.InterruptBusWrapper"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroupAggregator"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_1",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_2",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_3",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_4",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_5",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_6",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_7",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_8",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_9",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_10",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_11",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLInterconnectCoupler_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLInterconnectCoupler_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroupAggregator_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_1"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_12",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_13",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLXbar_1"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_14",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_15",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_16",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_17",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_18",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_19",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_20",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_21",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_22",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_23",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_2"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_24",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_25",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_26",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_27",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.PeripheryBus",
    "regMappingSer":{
      "displayName":"PeripheryBus",
      "deviceName":"PeripheryBus",
      "baseAddress":16384,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"unnamedRegField0_8",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"unnamedRegField0_16",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"unnamedRegField0_24",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":32,
          "bitWidth":8,
          "name":"unnamedRegField0_32",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":40,
          "bitWidth":8,
          "name":"unnamedRegField0_40",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":48,
          "bitWidth":8,
          "name":"unnamedRegField0_48",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":56,
          "bitWidth":8,
          "name":"unnamedRegField0_56",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroupAggregator_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLXbar_3"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_28",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_29",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_30",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_31",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.FrontBus"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroupAggregator_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_3"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_32",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_33",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_34",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_35",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_36",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_37",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_38",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_39",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_40",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_41",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_42",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_43",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_44",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_45",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_46",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_47",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_48",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_49",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_50",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_51",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLInterconnectCoupler_8"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_52",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_53",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_54",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_55",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_56",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_57",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLInterconnectCoupler_12"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_58",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_59",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLInterconnectCoupler_14"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_60",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_61",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_62",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_63",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_10"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_64",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_65",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_66",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_67",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroupAggregator_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_4"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_68",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_69",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_70",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_71",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_72",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_73",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_74",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_75",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_13"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLSourceShrinker"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLXbar_7"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_76",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_77",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_6"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_78",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_79",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroupAggregator_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.FixedClockBroadcast_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_5"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_80",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_81",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_82",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_83",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.InclusiveCache",
    "regMappingSer":{
      "displayName":"InclusiveCache",
      "deviceName":"InclusiveCache",
      "baseAddress":33619968,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"Banks",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of banks in the cache",
          "group":"Config",
          "groupDesc":"Information about the Cache Configuration",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"Ways",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of ways per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"lgSets",
          "resetValue":10,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the sets per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"lgBlockBytes",
          "resetValue":6,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the bytes per cache block",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200",
          "bitOffset":0,
          "bitWidth":64,
          "name":"Flush64",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the phsyical address equal to the 64-bit written data from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x240",
          "bitOffset":0,
          "bitWidth":32,
          "name":"Flush32",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the physical address equal to the 32-bit written data << 4 from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.Directory.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BankedStore.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLFilter"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_84",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_85",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_16"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_86",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_87",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLJbar"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_88",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_89",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLWidthWidget_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLInterconnectCoupler_20"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_90",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_91",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_92",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_93",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_10"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_13"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_0_0",
    "address_width":8,
    "name":"array_0_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_1_0",
    "address_width":8,
    "name":"array_1_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_2_0",
    "address_width":8,
    "name":"array_2_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_3_0",
    "address_width":8,
    "name":"array_3_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_4_0",
    "address_width":8,
    "name":"array_4_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_5_0",
    "address_width":8,
    "name":"array_5_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_6_0",
    "address_width":8,
    "name":"array_6_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_7_0",
    "address_width":8,
    "name":"array_7_0",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_0_1",
    "address_width":8,
    "name":"array_0_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_1_1",
    "address_width":8,
    "name":"array_1_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_2_1",
    "address_width":8,
    "name":"array_2_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_3_1",
    "address_width":8,
    "name":"array_3_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_4_1",
    "address_width":8,
    "name":"array_4_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_5_1",
    "address_width":8,
    "name":"array_5_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_6_1",
    "address_width":8,
    "name":"array_6_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.BoomDuplicatedDataArray.array_7_1",
    "address_width":8,
    "name":"array_7_1",
    "data_width":128,
    "depth":256,
    "description":"Non-blocking DCache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_0",
    "address_width":8,
    "name":"dataArrayB0Way_0",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_1",
    "address_width":8,
    "name":"dataArrayB0Way_1",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_2",
    "address_width":8,
    "name":"dataArrayB0Way_2",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_3",
    "address_width":8,
    "name":"dataArrayB0Way_3",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_4",
    "address_width":8,
    "name":"dataArrayB0Way_4",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_5",
    "address_width":8,
    "name":"dataArrayB0Way_5",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_6",
    "address_width":8,
    "name":"dataArrayB0Way_6",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB0Way_7",
    "address_width":8,
    "name":"dataArrayB0Way_7",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_0",
    "address_width":8,
    "name":"dataArrayB1Way_0",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_1",
    "address_width":8,
    "name":"dataArrayB1Way_1",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_2",
    "address_width":8,
    "name":"dataArrayB1Way_2",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_3",
    "address_width":8,
    "name":"dataArrayB1Way_3",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_4",
    "address_width":8,
    "name":"dataArrayB1Way_4",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_5",
    "address_width":8,
    "name":"dataArrayB1Way_5",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_6",
    "address_width":8,
    "name":"dataArrayB1Way_6",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.ICache.dataArrayB1Way_7",
    "address_width":8,
    "name":"dataArrayB1Way_7",
    "data_width":64,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":64
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_1>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_2>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_3>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_4>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_5>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_6>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_7>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_8>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_9>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|BranchDecode_10>bpd_csignals_decoded",
    "truthTable":"?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable":"???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"TestHarness.BoomTile.bundleOut_0_5.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "definition":{
      "ITBrNTaken":4,
      "ITBrTaken":5,
      "ITReserved7":7,
      "ITExcReturn":3,
      "ITInterrupt":2,
      "ITException":1,
      "ITCoSwap":12,
      "ITUnCall":8,
      "ITReserved6":6,
      "ITNothing":0,
      "ITReturn":13,
      "ITInTail":11,
      "ITInCall":9,
      "ITInJump":15,
      "ITUnJump":14,
      "ITUnTail":10
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"TestHarness.BoomTile.auto.trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"TestHarness.BoomTile",
    "paramsClassName":"boom.common.BoomTileParams",
    "params":{
      "name":"boom_tile",
      "trace":false,
      "btb":{
        "nEntries":28,
        "nMatchBits":14,
        "nPages":6,
        "nRAS":6,
        "bhtParams":{
          "nEntries":512,
          "counterLength":1,
          "historyLength":8,
          "historyBits":3
        },
        "updatesOutOfOrder":false
      },
      "hartId":0,
      "icache":{
        "nSets":64,
        "nWays":8,
        "rowBits":128,
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "cacheIdBits":0,
        "prefetch":false,
        "blockBytes":64,
        "latency":2,
        "fetchBytes":16
      },
      "core":{
        "fetchWidth":8,
        "decodeWidth":4,
        "numRobEntries":128,
        "issueParams":[
          {
            "dispatchWidth":4,
            "issueWidth":2,
            "numEntries":24,
            "iqType":2
          },
          {
            "dispatchWidth":4,
            "issueWidth":4,
            "numEntries":40,
            "iqType":1
          },
          {
            "dispatchWidth":4,
            "issueWidth":2,
            "numEntries":32,
            "iqType":4
          }
        ],
        "numLdqEntries":32,
        "numStqEntries":32,
        "numIntPhysRegisters":128,
        "numFpPhysRegisters":128,
        "maxBrCount":20,
        "numFetchBufferEntries":32,
        "enableAgePriorityIssue":true,
        "enablePrefetching":true,
        "enableFastLoadUse":true,
        "enableCommitMapTable":false,
        "enableFastPNR":false,
        "enableSFBOpt":false,
        "enableGHistStallRepair":true,
        "enableBTBFastRepair":true,
        "useAtomicsOnlyForIO":false,
        "ftq":{
          "nEntries":40
        },
        "intToFpLatency":2,
        "imulLatency":3,
        "nPerfCounters":0,
        "numRXQEntries":4,
        "numRCQEntries":8,
        "numDCacheBanks":1,
        "nPMPs":8,
        "enableICacheDelay":false,
        "enableBranchPrediction":true,
        "branchPredictor":{
          
        },
        "globalHistoryLength":64,
        "localHistoryLength":1,
        "localHistoryNSets":0,
        "bpdMaxMetaLength":120,
        "numRasEntries":32,
        "enableRasTopRepair":true,
        "useCompressed":true,
        "useFetchMonitor":true,
        "bootFreqHz":0,
        "fpu":{
          "minFLen":32,
          "fLen":64,
          "divSqrt":true,
          "sfmaLatency":4,
          "dfmaLatency":4
        },
        "usingFPU":true,
        "haveBasicCounters":true,
        "misaWritable":false,
        "mtvecInit":0,
        "mtvecWritable":true,
        "haveCFlush":false,
        "mulDiv":{
          "mulUnroll":1,
          "divUnroll":1,
          "mulEarlyOut":false,
          "divEarlyOut":true,
          "divEarlyOutGranularity":1
        },
        "nBreakpoints":0,
        "nL2TLBEntries":512,
        "nPTECacheEntries":8,
        "nL2TLBWays":1,
        "nLocalInterrupts":0,
        "useNMI":false,
        "useAtomics":true,
        "useDebug":true,
        "useUser":true,
        "useSupervisor":false,
        "useHypervisor":false,
        "useVM":true,
        "useSCIE":false,
        "useRVE":false,
        "useBPWatch":false,
        "clockGate":false,
        "mcontextWidth":0,
        "scontextWidth":0,
        "enableCommitLogPrintf":false,
        "enableBranchPrintf":false,
        "enableMemtracePrintf":false
      },
      "dcache":{
        "nSets":64,
        "nWays":8,
        "rowBits":128,
        "replacementPolicy":"random",
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "dataECCBytes":1,
        "nMSHRs":8,
        "nSDQ":17,
        "nRPQ":16,
        "nMMIOs":1,
        "blockBytes":64,
        "separateUncachedResp":false,
        "acquireBeforeRelease":false,
        "pipelineWayMux":false,
        "clockGate":false
      }
    }
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|UOPCodeFPUDecoder>decoder_decoded",
    "truthTable":"1000100->0000000011000000\n1000101->0000000111000000\n1000110->0010000100100000\n1000111->0010000110100000\n1001000->0011000000010000\n1001001->0011000110010000\n1001010->0010000100010001\n1001011->0010000010010001\n1001100->0000000001000001\n1001101->0000000111000001\n1001110->0010000000100001\n1001111->0010000110100001\n1010000->0011000000100001\n1010001->0011000110100001\n1010010->0010000000100000\n1010011->0010000110100000\n1010100->0011000000010001\n1010101->0011000110010001\n1010111->0011001000001001\n1011000->0011001000001001\n1011001->0011000000001001\n1011010->0011001110001001\n1011011->0011001110001001\n1011100->0011000110001001\n1011101->0011100000001001\n1011110->0011100000001001\n1011111->0011100000001001\n1100000->0011100000001001\n1100001->0011100110001001\n1100010->0011100110001001\n1100011->0011100110001001\n1100100->0011100110001001\n         0000000000000000",
    "minimizedTable":"1?00100->????????1???????\n100?10?->?????????1??????\n10?0101->????????1???????\n100?1?1->???????11???????\n100?11?->??1???????1?????\n100011?->???????1????????\n10?10??->??1?????????????\n10?100?->???1????????????\n10010??->???????????1????\n1001??1->????????1???????\n1001?01->???????1????????\n10?1?1?->??1????????????1\n10?1010->???????1????????\n10?11??->???????????????1\n101??0?->??11???????????1\n101?0??->??1?????????????\n10100??->??????????1?????\n101???1->??1?????????????\n1010?01->???????1????????\n10100?1->????????1???????\n101?011->???????1????????\n101010?->???????????1????\n101?1?1->???1???????????1\n101?111->????????????1???\n1010111->??????1?????????\n1011???->???1????????1???\n10110?0->??????1?????????\n101101?->??????1?1???????\n1011100->???????11???????\n10111?1->????1???????????\n101111?->????1???????????\n1100?00->??111???????1??1\n11000??->??111???????1??1\n11000?1->???????11???????\n110001?->???????11???????\n1100100->???????1????????\n         0000000000000000"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.IntToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.PipelinedMultiplier"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|PipelinedMultiplier>decoded",
    "truthTable":"00->0??\n01->111\n10->110\n11->100\n    ???",
    "minimizedTable":"0?->?11\n?1->1??\n1?->1??\n10->?1?\n    ???"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|MulDiv>decoded",
    "truthTable":"000->10??\n001->1111\n010->1110\n011->1100\n100->0011\n101->0000\n110->0111\n111->0100\n     ????",
    "minimizedTable":"??0->??1?\n0??->1???\n00?->??11\n0?1->?1??\n?1?->?1??\n1?0->???1\n     ????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|UOPCodeFPUDecoder_1>decoder_decoded",
    "truthTable":"1000100->0000000011000000\n1000101->0000000111000000\n1000110->0010000100100000\n1000111->0010000110100000\n1001000->0011000000010000\n1001001->0011000110010000\n1001010->0010000100010001\n1001011->0010000010010001\n1001100->0000000001000001\n1001101->0000000111000001\n1001110->0010000000100001\n1001111->0010000110100001\n1010000->0011000000100001\n1010001->0011000110100001\n1010010->0010000000100000\n1010011->0010000110100000\n1010100->0011000000010001\n1010101->0011000110010001\n1010111->0011001000001001\n1011000->0011001000001001\n1011001->0011000000001001\n1011010->0011001110001001\n1011011->0011001110001001\n1011100->0011000110001001\n1011101->0011100000001001\n1011110->0011100000001001\n1011111->0011100000001001\n1100000->0011100000001001\n1100001->0011100110001001\n1100010->0011100110001001\n1100011->0011100110001001\n1100100->0011100110001001\n         0000000000000000",
    "minimizedTable":"1?00100->????????1???????\n100?10?->?????????1??????\n10?0101->????????1???????\n100?1?1->???????11???????\n100?11?->??1???????1?????\n100011?->???????1????????\n10?10??->??1?????????????\n10?100?->???1????????????\n10010??->???????????1????\n1001??1->????????1???????\n1001?01->???????1????????\n10?1?1?->??1????????????1\n10?1010->???????1????????\n10?11??->???????????????1\n101??0?->??11???????????1\n101?0??->??1?????????????\n10100??->??????????1?????\n101???1->??1?????????????\n1010?01->???????1????????\n10100?1->????????1???????\n101?011->???????1????????\n101010?->???????????1????\n101?1?1->???1???????????1\n101?111->????????????1???\n1010111->??????1?????????\n1011???->???1????????1???\n10110?0->??????1?????????\n101101?->??????1?1???????\n1011100->???????11???????\n10111?1->????1???????????\n101111?->????1???????????\n1100?00->??111???????1??1\n11000??->??111???????1??1\n11000?1->???????11???????\n110001?->???????11???????\n1100100->???????1????????\n         0000000000000000"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPUFMAPipe"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|FMADecoder>decoder_decoded",
    "truthTable":"1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable":"1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPUFMAPipe_1"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|FMADecoder_1>decoder_decoded",
    "truthTable":"1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable":"1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPToInt"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|FMADecoder_2>decoder_decoded",
    "truthTable":"1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable":"1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPToFP"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|UOPCodeFDivDecoder>decoder_decoded",
    "truthTable":"1100101->??11???00????101\n1100110->??11???11????101\n1100111->??10???00????011\n1101000->??10???11????011\n         ????????????????",
    "minimizedTable":"???????->??1????????????1\n110010?->???1?????????1??\n1100110->???1???11????1??\n1100111->??????????????1?\n1101???->???????11?????1?\n         ????????????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|UOPCodeFPUDecoder_2>decoder_decoded",
    "truthTable":"1000100->0000000011000000\n1000101->0000000111000000\n1000110->0010000100100000\n1000111->0010000110100000\n1001000->0011000000010000\n1001001->0011000110010000\n1001010->0010000100010001\n1001011->0010000010010001\n1001100->0000000001000001\n1001101->0000000111000001\n1001110->0010000000100001\n1001111->0010000110100001\n1010000->0011000000100001\n1010001->0011000110100001\n1010010->0010000000100000\n1010011->0010000110100000\n1010100->0011000000010001\n1010101->0011000110010001\n1010111->0011001000001001\n1011000->0011001000001001\n1011001->0011000000001001\n1011010->0011001110001001\n1011011->0011001110001001\n1011100->0011000110001001\n1011101->0011100000001001\n1011110->0011100000001001\n1011111->0011100000001001\n1100000->0011100000001001\n1100001->0011100110001001\n1100010->0011100110001001\n1100011->0011100110001001\n1100100->0011100110001001\n         0000000000000000",
    "minimizedTable":"1?00100->????????1???????\n100?10?->?????????1??????\n10?0101->????????1???????\n100?1?1->???????11???????\n100?11?->??1???????1?????\n100011?->???????1????????\n10?10??->??1?????????????\n10?100?->???1????????????\n10010??->???????????1????\n1001??1->????????1???????\n1001?01->???????1????????\n10?1?1?->??1????????????1\n10?1010->???????1????????\n10?11??->???????????????1\n101??0?->??11???????????1\n101?0??->??1?????????????\n10100??->??????????1?????\n101???1->??1?????????????\n1010?01->???????1????????\n10100?1->????????1???????\n101?011->???????1????????\n101010?->???????????1????\n101?1?1->???1???????????1\n101?111->????????????1???\n1010111->??????1?????????\n1011???->???1????????1???\n10110?0->??????1?????????\n101101?->??????1?1???????\n1011100->???????11???????\n10111?1->????1???????????\n101111?->????1???????????\n1100?00->??111???????1??1\n11000??->??111???????1??1\n11000?1->???????11???????\n110001?->???????11???????\n1100100->???????1????????\n         0000000000000000"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPUFMAPipe_2"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|FMADecoder_3>decoder_decoded",
    "truthTable":"1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable":"1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPUFMAPipe_3"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|FMADecoder_4>decoder_decoded",
    "truthTable":"1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable":"1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPToInt_1"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|FMADecoder_5>decoder_decoded",
    "truthTable":"1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable":"1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"TestHarness.FPToFP_1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|IssueUnitCollapsing>count"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode>rrd_cs_decoder_decoded",
    "truthTable":"0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1000110->0000100????1????????1000\n1000111->0000100????1????????1000\n1001000->0000100????1????????1000\n1001001->0000100????1????????1000\n1001010->0000100????1????????1000\n1001011->0000100????1????????1000\n1001100->0000100????1????????1000\n1001101->0000100????1????????1000\n1001110->0000100????1????????1000\n1001111->0000100????1????????1000\n1010000->0000100????1????????1000\n1010001->0000100????1????????1000\n1010010->0000100????1????????1000\n1010011->0000100????1????????1000\n1010100->0000100????1????????1000\n1010101->0000100????1????????1000\n1010111->0000100????1????????1000\n1011000->0000100????1????????1000\n1011001->0000100????1????????1000\n1011010->0000100????1????????1000\n1011011->0000100????1????????1000\n1011100->0000100????1????????1000\n1011101->0000100????1????????1000\n1011110->0000100????1????????1000\n1011111->0000100????1????????1000\n1100000->0000100????1????????1000\n1100001->0000100????1????????1000\n1100010->0000100????1????????1000\n1100011->0000100????1????????1000\n1100100->0000100????1????????1000\n1100101->0000010????1????????1000\n1100110->0000010????1????????1000\n1100111->0000010????1????????1000\n1101000->0000010????1????????1000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n0000???->????????????????1???????\n00?01??->????????????????????1???\n0000100->?????????????1????11????\n?00?11?->????????????????????1???\n?00?110->??????????1?????????????\n?00011?->????????11??????????????\n00?0110->??????????1?????????????\n?001???->????????????????????1???\n?0010?0->????????1???????????????\n00010??->????????????????1???????\n?0?1001->???????1????????????????\n?001?01->????????1???????????????\n0?010?1->????????????????1???????\n?0?1010->???????1????????????????\n?001010->?????????1??????????????\n?001011->??????????1?????????????\n0?01?11->????????????????????1???\n?0?1100->???????1????????????????\n?00110?->??????????1?????????????\n?001100->?????????1??????????????\n0?011??->????????????????????1???\n?01?0?0->???????1????????????????\n?01?000->?????????1??????????????\n?010?0?->????????????????????1???\n?0100??->????????????????????1???\n0?100??->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n0010??0->?????????1??????????????\n?010??1->????????1???????????1???\n?01?01?->????????1???????????????\n0?1001?->????????1???????????????\n0010?10->???????1????????????????\n?01?011->?????????1??????????????\n?010?11->??????????1?????????????\n?01?10?->????????1???????????????\n?011?0?->???????1????????????????\n?0110??->???????1????????????????\n00110?0->??1?????????????????????\n?011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n100?11?->???????1??1?????????????\n1?01000->???????1111?????????1???\n10?1???->???????1111?????????1???\n101??0?->???????1?11?????????????\n101?0??->????????111?????????????\n101???1->???????1?1??????????????\n1100???->???????1111?????????1???\n11001?1->????11??????????????????\n110011?->????11??????????????????\n1101000->????11??????????????????\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_1>rrd_cs_decoder_decoded",
    "truthTable":"0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1000110->0000100????1????????1000\n1000111->0000100????1????????1000\n1001000->0000100????1????????1000\n1001001->0000100????1????????1000\n1001010->0000100????1????????1000\n1001011->0000100????1????????1000\n1001100->0000100????1????????1000\n1001101->0000100????1????????1000\n1001110->0000100????1????????1000\n1001111->0000100????1????????1000\n1010000->0000100????1????????1000\n1010001->0000100????1????????1000\n1010010->0000100????1????????1000\n1010011->0000100????1????????1000\n1010100->0000100????1????????1000\n1010101->0000100????1????????1000\n1010111->0000100????1????????1000\n1011000->0000100????1????????1000\n1011001->0000100????1????????1000\n1011010->0000100????1????????1000\n1011011->0000100????1????????1000\n1011100->0000100????1????????1000\n1011101->0000100????1????????1000\n1011110->0000100????1????????1000\n1011111->0000100????1????????1000\n1100000->0000100????1????????1000\n1100001->0000100????1????????1000\n1100010->0000100????1????????1000\n1100011->0000100????1????????1000\n1100100->0000100????1????????1000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n0000???->????????????????1???????\n00?01??->????????????????????1???\n0000100->?????????????1????11????\n?00?11?->????????????????????1???\n?00?110->??????????1?????????????\n?00011?->????????11??????????????\n00?0110->??????????1?????????????\n?001???->????????????????????1???\n?0010?0->????????1???????????????\n00010??->????????????????1???????\n?0?1001->???????1????????????????\n?001?01->????????1???????????????\n0?010?1->????????????????1???????\n?0?1010->???????1????????????????\n?001010->?????????1??????????????\n?001011->??????????1?????????????\n0?01?11->????????????????????1???\n?0?1100->???????1????????????????\n?00110?->??????????1?????????????\n?001100->?????????1??????????????\n0?011??->????????????????????1???\n?01?0?0->???????1????????????????\n?01?000->?????????1??????????????\n?010?0?->????????????????????1???\n?0100??->????????????????????1???\n0?100??->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n0010??0->?????????1??????????????\n?010??1->????????1???????????1???\n?01?01?->????????1???????????????\n0?1001?->????????1???????????????\n0010?10->???????1????????????????\n?01?011->?????????1??????????????\n?010?11->??????????1?????????????\n?01?10?->????????1???????????????\n?011?0?->???????1????????????????\n?0110??->???????1????????????????\n00110?0->??1?????????????????????\n?011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n100?11?->???????1??1?????????????\n10?1???->???????1111?????????1???\n101??0?->???????1?11?????????????\n101?0??->????????111?????????????\n101???1->???????1?1??????????????\n1100?00->???????1111?????????1???\n11000??->???????1111?????????1???\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|DecodeUnit>cs_decoder_decoded",
    "truthTable":"?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable":"???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|DecodeUnit_1>cs_decoder_decoded",
    "truthTable":"?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable":"???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|DecodeUnit_2>cs_decoder_decoded",
    "truthTable":"?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable":"???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|DecodeUnit_3>cs_decoder_decoded",
    "truthTable":"?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable":"???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|IssueUnitCollapsing_1>count"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|IssueUnitCollapsing_2>count"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_2>rrd_cs_decoder_decoded",
    "truthTable":"0000001->000000100001000010000000\n0000010->000000100001000010010000\n0000011->0000001????100000???0000\n0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1000011->00000010000100010???0000\n1101011->0000001????100000???0000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n000?0?0->????????????????1???????\n00000?1->????1?1?????????????????\n000001?->????1?1????????????1????\n?000011->????1?1?????????????????\n00?0?11->????????1???????????????\n00?0011->??????????1?????????????\n000?011->??????????1?????????????\n0000?11->?????????1??????????????\n0000011->???????1????????????????\n00?01??->????????????????????1???\n00001??->????????????????1???????\n0000100->?????????????1????11????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?100??->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1001?->????????1???????????????\n001?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n001?10?->????????1???????????????\n001011?->??????????1?????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n10?????->???????????????1????????\n1101011->????1?11111?????????????\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_3>rrd_cs_decoder_decoded",
    "truthTable":"0000001->000000100001000010000000\n0000010->000000100001000010010000\n0000011->0000001????100000???0000\n0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1000011->00000010000100010???0000\n1101011->0000001????100000???0000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n000?0?0->????????????????1???????\n00000?1->????1?1?????????????????\n000001?->????1?1????????????1????\n?000011->????1?1?????????????????\n00?0?11->????????1???????????????\n00?0011->??????????1?????????????\n000?011->??????????1?????????????\n0000?11->?????????1??????????????\n0000011->???????1????????????????\n00?01??->????????????????????1???\n00001??->????????????????1???????\n0000100->?????????????1????11????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?100??->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1001?->????????1???????????????\n001?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n001?10?->????????1???????????????\n001011?->??????????1?????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n10?????->???????????????1????????\n1101011->????1?11111?????????????\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_4>rrd_cs_decoder_decoded",
    "truthTable":"0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0100101->011110000001100111001000\n0100110->100010000001100110001000\n0100111->000010000001100010111000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1000100->0000100????1????????1000\n1000101->0000100????1????????1000\n1001100->0000100????1????????1000\n1001101->0000100????1????????1000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n0000???->????????????????1???????\n0?00??1->????????????????1???????\n?00?10?->????????????????????1???\n00?01??->????????????????????1???\n0000100->?????????????1????11????\n0?0?1?1->????????????????????1???\n0?0?11?->????????????????????1???\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n?00110?->??????????1?????????????\n?001100->?????????1??????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n0?100??->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1001?->????????1???????????????\n001?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0100???->????????????1???????????\n010010?->???????????????1?1??????\n0100101->?111????????????????????\n010?110->????????????????1???????\n0100110->1??????????????1????????\n0100111->??????????????????11????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n100?10?->???????1111?????????????\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_5>rrd_cs_decoder_decoded",
    "truthTable":"0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0011110->000010000001000100001101\n0011111->000010000001000100001110\n0100000->000010000001000100001111\n0100001->000010000001011000001101\n0100010->000010000001011000001110\n0100011->000010000001011000001111\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1101001->000010000001011000000100\n1101010->000010000001011000000100\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n0000???->????????????????1???????\n000?1??->????????????????????1???\n0000100->?????????????1????11????\n00??11?->????????????????????1???\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?1000?->???????1????????????????\n001?000->?????????1??????????????\n0010???->????????????????????1???\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1001?->????????1???????????????\n001?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011???->???????????????1????????\n0011?0?->???????1??????????1?????\n00110??->???????1??????????1?????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n001111?->?????????????????????1??\n0011110->???????????????????????1\n0011111->??????????????????????1?\n01?00??->????????????????????1???\n01000??->?????????????????????1??\n01000?0->??????????????????????1?\n010000?->???????????????????????1\n0100000->???????????????1????????\n01000?1->?????????????11????????1\n010001?->?????????????11???????1?\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n1??????->?????????????11?????????\n1101001->?????????????????????1??\n1101010->?????????????????????1??\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_6>rrd_cs_decoder_decoded",
    "truthTable":"0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n0110100->00000100000100000???1000\n0110101->00000100001100000???1000\n0110110->00000100011100000???1000\n0110111->00000100010100000???1000\n0111000->00000100000000000???1000\n0111001->00000100100100000???1000\n0111010->00000100101100000???1000\n0111011->00000100110100000???1000\n0111100->00000100111100000???1000\n0111101->00000100100000000???1000\n0111110->00000100101000000???1000\n0111111->00000100110000000???1000\n1000000->00000100111000000???1000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n0000???->????????????????1???????\n000?1??->????????????????????1???\n0000100->?????????????1????11????\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?10???->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n01?11?1->???????????1????????????\n0101101->???????1?1??????????????\n01?111?->???????????1????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n011????->????????????????????1???\n011?000->???????????1????????????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n0110?01->??????????1?????????????\n011??10->??????????1?????????????\n011?1??->????11??????????????????\n011011?->?????????1??????????????\n0111???->????11??????????????????\n0111??1->????????1???????????????\n0111?11->?????????1??????????????\n01111??->????????1???????????????\n01111?0->??????????1?????????????\n0111100->?????????1??????????????\n1000000->????11??1111????????1???\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|RegisterReadDecode_7>rrd_cs_decoder_decoded",
    "truthTable":"0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n0110100->00000100000100000???1000\n0110101->00000100001100000???1000\n0110110->00000100011100000???1000\n0110111->00000100010100000???1000\n0111000->00000100000000000???1000\n0111001->00000100100100000???1000\n0111010->00000100101100000???1000\n0111011->00000100110100000???1000\n0111100->00000100111100000???1000\n0111101->00000100100000000???1000\n0111110->00000100101000000???1000\n0111111->00000100110000000???1000\n1000000->00000100111000000???1000\n         000010000001????????0000",
    "minimizedTable":"000??0?->????????????????1???????\n0000???->????????????????1???????\n000?1??->????????????????????1???\n0000100->?????????????1????11????\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?10???->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n01?11?1->???????????1????????????\n0101101->???????1?1??????????????\n01?111?->???????????1????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n011????->????????????????????1???\n011?000->???????????1????????????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n0110?01->??????????1?????????????\n011??10->??????????1?????????????\n011?1??->????11??????????????????\n011011?->?????????1??????????????\n0111???->????11??????????????????\n0111??1->????????1???????????????\n0111?11->?????????1??????????????\n01111??->????????1???????????????\n01111?0->??????????1?????????????\n0111100->?????????1??????????????\n1000000->????11??1111????????1???\n         000010000001????????0000"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>decoded_decoded",
    "truthTable":"000000000001->000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000010->000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000011->000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000100000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000\n000100000100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000\n000100000101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000\n000100000110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000\n000101000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000\n000101000001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\n000101000010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000\n000101000011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000\n000101000100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000\n000110000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000\n001100000000->000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000001->000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000\n001100000011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000\n001100000100->000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000101->000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000\n001100100000->000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100011->000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100100->000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100101->000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100110->000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100111->000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101000->000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101001->000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101010->000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101011->000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101100->000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101101->000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101110->000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101111->000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110000->000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110001->000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110010->000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110011->000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110100->000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000\n001100110101->000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000\n001100110110->000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000\n001100110111->000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000\n001100111000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000\n001100111001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000\n001100111010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000\n001100111011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000\n001100111100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000\n001100111101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000\n001100111110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000\n001100111111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000\n001101000000->000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000001->000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000010->000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000011->000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000100->000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001110100000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000\n001110100010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000\n001110110000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000\n001110110001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000\n001110110010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000\n001110110011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000\n001110110100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000\n001110110101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000\n001110110110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000\n001110110111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000\n001110111000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000\n001110111001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000\n001110111010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000\n001110111011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000\n001110111100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000\n001110111101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000\n001110111110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000\n001110111111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000\n011110100000->100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110100001->010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110100010->001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110100011->000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110110000->000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110110001->000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110110010->000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011111000001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000\n101100000000->000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000010->000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000011->000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000100->000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000101->000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000110->000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000111->000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001000->000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001001->000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001010->000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001011->000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001100->000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001101->000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001110->000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001111->000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010000->000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010001->000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010010->000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010011->000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000\n101100010100->000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000\n101100010101->000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000\n101100010110->000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000\n101100010111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000\n101100011000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000\n101100011001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000\n101100011010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000\n101100011011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000\n101100011100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000\n101100011101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000\n101100011110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000\n101100011111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000\n110000000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000\n110000000010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000\n110000000011->000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000100->000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000101->000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000110->000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000111->000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001000->000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001001->000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001010->000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001011->000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001100->000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001101->000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001110->000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001111->000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010000->000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010001->000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010010->000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010011->000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000\n110000010100->000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000\n110000010101->000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000\n110000010110->000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000\n110000010111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000\n110000011000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000\n110000011001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000\n110000011010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000\n110000011011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000\n110000011100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000\n110000011101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000\n110000011110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000\n110000011111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000\n111100010001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\n111100010010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010\n111100010011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100\n111100010100->000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n              ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????",
    "minimizedTable":"00000000000?->?????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n000000000010->??????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n000000000011->???????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n0001000000??->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????\n000100000100->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????\n000100000101->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????\n00010000011?->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????\n000101000000->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????\n000101000001->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????\n000101000010->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????\n000101000011->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????\n0001010001??->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????\n00011???????->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????\n001100000000->?????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100000001->????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100000010->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????\n001100000011->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????\n001100000100->????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100000101->??????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n00110000011?->??????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????\n00110010000?->????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n00110010001?->???????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100100->??????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100101->?????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100110->????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100111->???????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101000->??????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101001->?????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101010->????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101011->???????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????\n001100101100->??????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????\n001100101101->?????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????\n001100101110->????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????\n001100101111->???????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????\n001100110000->??????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????\n001100110001->?????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????\n001100110010->????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????\n001100110011->???????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????\n001100110100->??????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????\n001100110101->?????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????\n001100110110->????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????\n001100110111->???????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????\n001100111000->??????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????\n001100111001->?????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????\n001100111010->????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????\n001100111011->???????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????\n001100111100->??????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????\n001100111101->?????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????\n001100111110->????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????\n001100111111->???????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????\n001101000000->?????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001101000001->??????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001101000010->????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001101000011->???????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n0011010001??->???????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n00111010000?->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????\n00111010001?->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????\n001110110000->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????\n001110110001->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????\n001110110010->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????\n001110110011->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????\n001110110100->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????\n001110110101->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????\n001110110110->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????\n001110110111->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????\n001110111000->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????\n001110111001->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????\n001110111010->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????\n001110111011->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????\n001110111100->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????\n001110111101->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????\n001110111110->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????\n001110111111->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????\n011110100000->1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110100001->?1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110100010->??1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110100011->???1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110110000->??????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110110001->???????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n01111011001?->????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011111??????->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???\n10110000000?->?????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000010->??????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000011->????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000100->???????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000101->??????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000110->?????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000111->????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001000->???????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001001->??????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001010->?????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001011->????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????\n101100001100->???????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????\n101100001101->??????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????\n101100001110->?????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????\n101100001111->????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????\n101100010000->???????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????\n101100010001->??????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????\n101100010010->?????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????\n101100010011->????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????\n101100010100->???????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????\n101100010101->??????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????\n101100010110->?????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????\n101100010111->????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????\n101100011000->???????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????\n101100011001->??????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????\n101100011010->?????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????\n101100011011->????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????\n101100011100->???????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????\n101100011101->??????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????\n101100011110->?????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????\n101100011111->????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????\n11000000000?->???????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????\n110000000010->????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????\n110000000011->?????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000100->????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000101->???????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000110->??????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000111->?????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001000->????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001001->???????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001010->??????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001011->?????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????\n110000001100->????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????\n110000001101->???????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????\n110000001110->??????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????\n110000001111->?????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????\n110000010000->????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????\n110000010001->???????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????\n110000010010->??????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????\n110000010011->?????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????\n110000010100->????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????\n110000010101->???????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????\n110000010110->??????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????\n110000010111->?????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????\n110000011000->????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????\n110000011001->???????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????\n110000011010->??????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????\n110000011011->?????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????\n110000011100->????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????\n110000011101->???????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????\n110000011110->??????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????\n110000011111->?????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????\n11110001000?->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1\n111100010010->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?\n111100010011->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??\n1111000101??->?????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n              ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>decoded",
    "truthTable":"00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable":"000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>decoded_147",
    "truthTable":"00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable":"000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_0_fp_csr_plaOutput",
    "truthTable":"000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"0000????????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_0_read_illegal_plaOutput",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"01111011????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_0_read_illegal_plaOutput_1",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"????????????->0\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>decoded_148",
    "truthTable":"00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable":"000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_1_fp_csr_plaOutput",
    "truthTable":"000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"0000????????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_1_read_illegal_plaOutput",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"01111011????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_1_read_illegal_plaOutput_1",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"????????????->0\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>decoded_149",
    "truthTable":"00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable":"000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_2_fp_csr_plaOutput",
    "truthTable":"000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"0000????????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_2_read_illegal_plaOutput",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"01111011????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_2_read_illegal_plaOutput_1",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"????????????->0\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>decoded_150",
    "truthTable":"00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable":"000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_3_fp_csr_plaOutput",
    "truthTable":"000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"0000????????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_3_read_illegal_plaOutput",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"01111011????->1\n              ?"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~TestHarness|CSRFile>io_decode_3_read_illegal_plaOutput_1",
    "truthTable":"000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n              ?",
    "minimizedTable":"????????????->0\n              ?"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|BoomCore>debug_brs"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|BoomCore>debug_jals"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|BoomCore>debug_jalrs"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|BoomCore>debug_tsc_reg"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|BoomCore>debug_irt_reg"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_load_incoming_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_stad_incoming_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_sta_incoming_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_std_incoming_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_sfence_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_release_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_hella_incoming_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_hella_wakeup_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_load_retry_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_sta_retry_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_load_wakeup_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_store_commit_0_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_load_incoming_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_stad_incoming_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_sta_incoming_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_std_incoming_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_sfence_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_release_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_hella_incoming_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_hella_wakeup_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_load_retry_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_sta_retry_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_load_wakeup_1_will_fire"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|LSU>will_fire_store_commit_1_will_fire"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.PTW.l2_tlb_ram",
    "address_width":9,
    "name":"l2_tlb_ram",
    "data_width":45,
    "depth":512,
    "description":"L2 TLB",
    "write_mask_granularity":45
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"TestHarness.TileResetDomain.auto.boom_tile_trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TileResetDomain"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.FixedClockBroadcast_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_17"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_94",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_95",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_19"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_14"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"TestHarness.BundleBridgeNexus_15.inputs_0.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"TestHarness.BundleBridgeNexus_15.auto.in.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_15"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_96",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_97",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"TestHarness.TLPLIC",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.PLICParams",
    "params":{
      "baseAddress":201326592,
      "maxPriorities":7,
      "intStages":0,
      "maxHarts":15872
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TLPLIC",
    "regMappingSer":{
      "displayName":"TLPLIC",
      "deviceName":"TLPLIC",
      "baseAddress":201326592,
      "regFields":[
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":1,
          "name":"priority_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 1",
          "group":"priority_1",
          "groupDesc":"Acting priority of interrupt source 1",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"pending_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-1. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"Enable bits for each interrupt source for target 0. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":1,
          "bitWidth":1,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-1. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_1",
          "groupDesc":"Enable bits for each interrupt source for target 1. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"threshold_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 0. Maximum value is 1.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"threshold_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 1. Maximum value is 1.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_98",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_99",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"TestHarness.CLINT",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.CLINTParams",
    "params":{
      "baseAddress":33554432,
      "intStages":0
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.CLINT",
    "regMappingSer":{
      "displayName":"CLINT",
      "deviceName":"CLINT",
      "baseAddress":33554432,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"msip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"MSIP bit for Hart 0",
          "group":"msip",
          "groupDesc":"MSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"msip",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtimecmp_0_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"MTIMECMP for hart 0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtimecmp_0_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtimecmp_0_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtimecmp_0_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtimecmp_0_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtimecmp_0_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtimecmp_0_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtimecmp_0_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtime_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"Timer Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtime_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtime_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtime_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtime_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtime_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtime_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtime_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_100",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_101",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_102",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_103",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TLDebugModuleOuter",
    "regMappingSer":{
      "displayName":"TLDebugModuleOuter",
      "deviceName":"TLDebugModuleOuter",
      "baseAddress":64,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"dmactive",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"debug module active",
          "group":"dmcontrol",
          "groupDesc":"debug module control register",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":1,
          "bitWidth":1,
          "name":"ndmreset",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"debug module reset output",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":2,
          "bitWidth":1,
          "name":"clrresethaltreq",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"clear reset halt request",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":3,
          "bitWidth":1,
          "name":"setresethaltreq",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"set reset halt request",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":4,
          "bitWidth":12,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":17,
          "bitWidth":9,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":26,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":27,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":28,
          "bitWidth":1,
          "name":"ackhavereset",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"acknowledge reset",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":29,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":30,
          "bitWidth":1,
          "name":"resumereq",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"resume request",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":31,
          "bitWidth":1,
          "name":"haltreq",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"halt request",
          "group":"dmcontrol",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":12,
          "name":"dataaddr",
          "resetValue":896,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"data address",
          "group":"dmi_hartinfo",
          "groupDesc":"hart information",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":12,
          "bitWidth":4,
          "name":"datasize",
          "resetValue":2,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"number of DATA registers",
          "group":"dmi_hartinfo",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":16,
          "bitWidth":1,
          "name":"dataaccess",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"data access type",
          "group":"dmi_hartinfo",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":17,
          "bitWidth":3,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmi_hartinfo",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":20,
          "bitWidth":4,
          "name":"nscratch",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"number of scratch registers",
          "group":"dmi_hartinfo",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_104",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_105",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_106",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_107",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_108",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_109",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_110",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_111",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_112",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_113",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"TestHarness.TLDebugModuleInner",
    "paramsClassName":"freechips.rocketchip.devices.debug.DebugModuleParams",
    "params":{
      "nDMIAddrSize":7,
      "nAbstractDataWords":2,
      "nProgramBufferWords":16,
      "supportQuickAccess":false,
      "supportHartArray":true,
      "hasAuthentication":false,
      "nHaltGroups":1,
      "nExtTriggers":0,
      "nScratch":1,
      "baseAddress":0,
      "hasImplicitEbreak":false,
      "hasHartResets":false,
      "hasBusMaster":false,
      "crossingHasSafeReset":true,
      "maxSupportedSBAccess":64,
      "clockGate":true
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TLDebugModuleInner",
    "regMappingSer":{
      "displayName":"TLDebugModuleInner",
      "deviceName":"TLDebugModuleInner",
      "baseAddress":0,
      "regFields":[
        {
          "byteOffset":"0x44",
          "bitOffset":0,
          "bitWidth":4,
          "name":"version",
          "resetValue":2,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"version",
          "group":"dmi_dmstatus",
          "groupDesc":"debug module status register",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":4,
          "bitWidth":1,
          "name":"confstrptrvalid",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"confstrptrvalid",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":5,
          "bitWidth":1,
          "name":"hasresethaltreq",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"hasresethaltreq",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":6,
          "bitWidth":1,
          "name":"authbusy",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"authbusy",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":7,
          "bitWidth":1,
          "name":"authenticated",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"authenticated",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":8,
          "bitWidth":1,
          "name":"anyhalted",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"anyhalted",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":9,
          "bitWidth":1,
          "name":"allhalted",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"allhalted",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":10,
          "bitWidth":1,
          "name":"anyrunning",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"anyrunning",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":11,
          "bitWidth":1,
          "name":"allrunning",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"allrunning",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":12,
          "bitWidth":1,
          "name":"anyunavail",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"anyunavail",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":13,
          "bitWidth":1,
          "name":"allunavail",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"allunavail",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":14,
          "bitWidth":1,
          "name":"anynonexistent",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"anynonexistent",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":15,
          "bitWidth":1,
          "name":"allnonexistent",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"allnonexistent",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":16,
          "bitWidth":1,
          "name":"anyresumeack",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"anyresumeack",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":17,
          "bitWidth":1,
          "name":"allresumeack",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"allresumeack",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":18,
          "bitWidth":1,
          "name":"anyhavereset",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"anyhavereset",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":19,
          "bitWidth":1,
          "name":"allhavereset",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"allhavereset",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":20,
          "bitWidth":2,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x44",
          "bitOffset":22,
          "bitWidth":1,
          "name":"impebreak",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"impebreak",
          "group":"dmi_dmstatus",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x100",
          "bitOffset":0,
          "bitWidth":32,
          "name":"dmi_haltsum0",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"halt summary 0",
          "group":"dmi_haltsum0",
          "groupDesc":"Halt Summary 0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":0,
          "bitWidth":32,
          "name":"dmi_haltsum1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"halt summary 1",
          "group":"dmi_haltsum1",
          "groupDesc":"Halt Summary 1",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":0,
          "bitWidth":4,
          "name":"datacount",
          "resetValue":2,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"number of DATA registers",
          "group":"dmi_abstractcs",
          "groupDesc":"abstract command control/status",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":4,
          "bitWidth":4,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmi_abstractcs",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":8,
          "bitWidth":3,
          "name":"cmderr",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(ONE_TO_CLEAR)",
          "rdAction":"None",
          "desc":"command error",
          "group":"dmi_abstractcs",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":11,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmi_abstractcs",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":12,
          "bitWidth":1,
          "name":"busy",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"busy",
          "group":"dmi_abstractcs",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":13,
          "bitWidth":11,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmi_abstractcs",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x58",
          "bitOffset":24,
          "bitWidth":5,
          "name":"progbufsize",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"number of PROGBUF registers",
          "group":"dmi_abstractcs",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x60",
          "bitOffset":0,
          "bitWidth":2,
          "name":"autoexecdata",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data autoexec",
          "group":"dmi_abstractauto",
          "groupDesc":"abstract command autoexec",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x60",
          "bitOffset":2,
          "bitWidth":14,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"dmi_abstractauto",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x60",
          "bitOffset":16,
          "bitWidth":16,
          "name":"autoexecprogbuf",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf autoexec",
          "group":"dmi_abstractauto",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x5c",
          "bitOffset":0,
          "bitWidth":32,
          "name":"dmi_command",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command register",
          "group":"dmi_command",
          "groupDesc":"Abstract Command Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":8,
          "name":"dmi_data_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 0",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":8,
          "bitWidth":8,
          "name":"dmi_data_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 1",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":16,
          "bitWidth":8,
          "name":"dmi_data_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 2",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":24,
          "bitWidth":8,
          "name":"dmi_data_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 3",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":32,
          "bitWidth":8,
          "name":"dmi_data_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 4",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":40,
          "bitWidth":8,
          "name":"dmi_data_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 5",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":48,
          "bitWidth":8,
          "name":"dmi_data_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 6",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":56,
          "bitWidth":8,
          "name":"dmi_data_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command data register 7",
          "group":"dmi_data",
          "groupDesc":"abstract command data registers",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":0,
          "bitWidth":8,
          "name":"dmi_progbuf_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 0",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":8,
          "bitWidth":8,
          "name":"dmi_progbuf_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 1",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":16,
          "bitWidth":8,
          "name":"dmi_progbuf_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 2",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":24,
          "bitWidth":8,
          "name":"dmi_progbuf_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 3",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":32,
          "bitWidth":8,
          "name":"dmi_progbuf_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 4",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":40,
          "bitWidth":8,
          "name":"dmi_progbuf_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 5",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":48,
          "bitWidth":8,
          "name":"dmi_progbuf_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 6",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":56,
          "bitWidth":8,
          "name":"dmi_progbuf_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 7",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":64,
          "bitWidth":8,
          "name":"dmi_progbuf_8",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 8",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":72,
          "bitWidth":8,
          "name":"dmi_progbuf_9",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 9",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":80,
          "bitWidth":8,
          "name":"dmi_progbuf_10",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 10",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":88,
          "bitWidth":8,
          "name":"dmi_progbuf_11",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 11",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":96,
          "bitWidth":8,
          "name":"dmi_progbuf_12",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 12",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":104,
          "bitWidth":8,
          "name":"dmi_progbuf_13",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 13",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":112,
          "bitWidth":8,
          "name":"dmi_progbuf_14",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 14",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":120,
          "bitWidth":8,
          "name":"dmi_progbuf_15",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 15",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":128,
          "bitWidth":8,
          "name":"dmi_progbuf_16",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 16",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":136,
          "bitWidth":8,
          "name":"dmi_progbuf_17",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 17",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":144,
          "bitWidth":8,
          "name":"dmi_progbuf_18",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 18",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":152,
          "bitWidth":8,
          "name":"dmi_progbuf_19",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 19",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":160,
          "bitWidth":8,
          "name":"dmi_progbuf_20",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 20",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":168,
          "bitWidth":8,
          "name":"dmi_progbuf_21",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 21",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":176,
          "bitWidth":8,
          "name":"dmi_progbuf_22",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 22",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":184,
          "bitWidth":8,
          "name":"dmi_progbuf_23",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 23",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":192,
          "bitWidth":8,
          "name":"dmi_progbuf_24",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 24",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":200,
          "bitWidth":8,
          "name":"dmi_progbuf_25",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 25",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":208,
          "bitWidth":8,
          "name":"dmi_progbuf_26",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 26",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":216,
          "bitWidth":8,
          "name":"dmi_progbuf_27",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 27",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":224,
          "bitWidth":8,
          "name":"dmi_progbuf_28",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 28",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":232,
          "bitWidth":8,
          "name":"dmi_progbuf_29",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 29",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":240,
          "bitWidth":8,
          "name":"dmi_progbuf_30",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 30",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":248,
          "bitWidth":8,
          "name":"dmi_progbuf_31",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 31",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":256,
          "bitWidth":8,
          "name":"dmi_progbuf_32",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 32",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":264,
          "bitWidth":8,
          "name":"dmi_progbuf_33",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 33",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":272,
          "bitWidth":8,
          "name":"dmi_progbuf_34",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 34",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":280,
          "bitWidth":8,
          "name":"dmi_progbuf_35",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 35",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":288,
          "bitWidth":8,
          "name":"dmi_progbuf_36",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 36",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":296,
          "bitWidth":8,
          "name":"dmi_progbuf_37",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 37",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":304,
          "bitWidth":8,
          "name":"dmi_progbuf_38",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 38",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":312,
          "bitWidth":8,
          "name":"dmi_progbuf_39",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 39",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":320,
          "bitWidth":8,
          "name":"dmi_progbuf_40",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 40",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":328,
          "bitWidth":8,
          "name":"dmi_progbuf_41",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 41",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":336,
          "bitWidth":8,
          "name":"dmi_progbuf_42",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 42",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":344,
          "bitWidth":8,
          "name":"dmi_progbuf_43",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 43",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":352,
          "bitWidth":8,
          "name":"dmi_progbuf_44",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 44",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":360,
          "bitWidth":8,
          "name":"dmi_progbuf_45",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 45",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":368,
          "bitWidth":8,
          "name":"dmi_progbuf_46",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 46",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":376,
          "bitWidth":8,
          "name":"dmi_progbuf_47",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 47",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":384,
          "bitWidth":8,
          "name":"dmi_progbuf_48",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 48",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":392,
          "bitWidth":8,
          "name":"dmi_progbuf_49",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 49",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":400,
          "bitWidth":8,
          "name":"dmi_progbuf_50",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 50",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":408,
          "bitWidth":8,
          "name":"dmi_progbuf_51",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 51",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":416,
          "bitWidth":8,
          "name":"dmi_progbuf_52",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 52",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":424,
          "bitWidth":8,
          "name":"dmi_progbuf_53",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 53",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":432,
          "bitWidth":8,
          "name":"dmi_progbuf_54",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 54",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":440,
          "bitWidth":8,
          "name":"dmi_progbuf_55",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 55",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":448,
          "bitWidth":8,
          "name":"dmi_progbuf_56",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 56",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":456,
          "bitWidth":8,
          "name":"dmi_progbuf_57",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 57",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":464,
          "bitWidth":8,
          "name":"dmi_progbuf_58",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 58",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":472,
          "bitWidth":8,
          "name":"dmi_progbuf_59",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 59",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":480,
          "bitWidth":8,
          "name":"dmi_progbuf_60",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 60",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":488,
          "bitWidth":8,
          "name":"dmi_progbuf_61",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 61",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":496,
          "bitWidth":8,
          "name":"dmi_progbuf_62",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 62",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x80",
          "bitOffset":504,
          "bitWidth":8,
          "name":"dmi_progbuf_63",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"abstract command progbuf register 63",
          "group":"dmi_progbuf",
          "groupDesc":"abstract command progbuf registers",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TLDebugModuleInner",
    "regMappingSer":{
      "displayName":"TLDebugModuleInner",
      "deviceName":"TLDebugModuleInner",
      "baseAddress":0,
      "regFields":[
        {
          "byteOffset":"0x100",
          "bitOffset":0,
          "bitWidth":10,
          "name":"debug_hart_halted",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM Causes hart to write its hartID here when it is in Debug Mode.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x104",
          "bitOffset":0,
          "bitWidth":10,
          "name":"debug_hart_going",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM causes hart to write 0 here when it begins executing Debug Mode instructions.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x108",
          "bitOffset":0,
          "bitWidth":10,
          "name":"debug_hart_resuming",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM causes hart to write its hartID here when it leaves Debug Mode.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10c",
          "bitOffset":0,
          "bitWidth":10,
          "name":"debug_hart_exception",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM causes hart to write 0 here if it gets an exception in Debug Mode.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":0,
          "bitWidth":8,
          "name":"debug_data_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"Data used to communicate with Debug Module",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":8,
          "bitWidth":8,
          "name":"debug_data_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":16,
          "bitWidth":8,
          "name":"debug_data_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":24,
          "bitWidth":8,
          "name":"debug_data_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":32,
          "bitWidth":8,
          "name":"debug_data_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":40,
          "bitWidth":8,
          "name":"debug_data_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":48,
          "bitWidth":8,
          "name":"debug_data_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":56,
          "bitWidth":8,
          "name":"debug_data_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":0,
          "bitWidth":8,
          "name":"debug_progbuf_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"Program buffer used to communicate with Debug Module",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":8,
          "bitWidth":8,
          "name":"debug_progbuf_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":16,
          "bitWidth":8,
          "name":"debug_progbuf_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":24,
          "bitWidth":8,
          "name":"debug_progbuf_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":32,
          "bitWidth":8,
          "name":"debug_progbuf_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":40,
          "bitWidth":8,
          "name":"debug_progbuf_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":48,
          "bitWidth":8,
          "name":"debug_progbuf_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":56,
          "bitWidth":8,
          "name":"debug_progbuf_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":64,
          "bitWidth":8,
          "name":"debug_progbuf_8",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":72,
          "bitWidth":8,
          "name":"debug_progbuf_9",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":80,
          "bitWidth":8,
          "name":"debug_progbuf_10",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":88,
          "bitWidth":8,
          "name":"debug_progbuf_11",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":96,
          "bitWidth":8,
          "name":"debug_progbuf_12",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":104,
          "bitWidth":8,
          "name":"debug_progbuf_13",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":112,
          "bitWidth":8,
          "name":"debug_progbuf_14",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":120,
          "bitWidth":8,
          "name":"debug_progbuf_15",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":128,
          "bitWidth":8,
          "name":"debug_progbuf_16",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":136,
          "bitWidth":8,
          "name":"debug_progbuf_17",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":144,
          "bitWidth":8,
          "name":"debug_progbuf_18",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":152,
          "bitWidth":8,
          "name":"debug_progbuf_19",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":160,
          "bitWidth":8,
          "name":"debug_progbuf_20",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":168,
          "bitWidth":8,
          "name":"debug_progbuf_21",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":176,
          "bitWidth":8,
          "name":"debug_progbuf_22",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":184,
          "bitWidth":8,
          "name":"debug_progbuf_23",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":192,
          "bitWidth":8,
          "name":"debug_progbuf_24",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":200,
          "bitWidth":8,
          "name":"debug_progbuf_25",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":208,
          "bitWidth":8,
          "name":"debug_progbuf_26",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":216,
          "bitWidth":8,
          "name":"debug_progbuf_27",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":224,
          "bitWidth":8,
          "name":"debug_progbuf_28",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":232,
          "bitWidth":8,
          "name":"debug_progbuf_29",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":240,
          "bitWidth":8,
          "name":"debug_progbuf_30",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":248,
          "bitWidth":8,
          "name":"debug_progbuf_31",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":256,
          "bitWidth":8,
          "name":"debug_progbuf_32",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":264,
          "bitWidth":8,
          "name":"debug_progbuf_33",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":272,
          "bitWidth":8,
          "name":"debug_progbuf_34",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":280,
          "bitWidth":8,
          "name":"debug_progbuf_35",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":288,
          "bitWidth":8,
          "name":"debug_progbuf_36",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":296,
          "bitWidth":8,
          "name":"debug_progbuf_37",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":304,
          "bitWidth":8,
          "name":"debug_progbuf_38",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":312,
          "bitWidth":8,
          "name":"debug_progbuf_39",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":320,
          "bitWidth":8,
          "name":"debug_progbuf_40",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":328,
          "bitWidth":8,
          "name":"debug_progbuf_41",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":336,
          "bitWidth":8,
          "name":"debug_progbuf_42",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":344,
          "bitWidth":8,
          "name":"debug_progbuf_43",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":352,
          "bitWidth":8,
          "name":"debug_progbuf_44",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":360,
          "bitWidth":8,
          "name":"debug_progbuf_45",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":368,
          "bitWidth":8,
          "name":"debug_progbuf_46",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":376,
          "bitWidth":8,
          "name":"debug_progbuf_47",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":384,
          "bitWidth":8,
          "name":"debug_progbuf_48",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":392,
          "bitWidth":8,
          "name":"debug_progbuf_49",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":400,
          "bitWidth":8,
          "name":"debug_progbuf_50",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":408,
          "bitWidth":8,
          "name":"debug_progbuf_51",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":416,
          "bitWidth":8,
          "name":"debug_progbuf_52",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":424,
          "bitWidth":8,
          "name":"debug_progbuf_53",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":432,
          "bitWidth":8,
          "name":"debug_progbuf_54",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":440,
          "bitWidth":8,
          "name":"debug_progbuf_55",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":448,
          "bitWidth":8,
          "name":"debug_progbuf_56",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":456,
          "bitWidth":8,
          "name":"debug_progbuf_57",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":464,
          "bitWidth":8,
          "name":"debug_progbuf_58",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":472,
          "bitWidth":8,
          "name":"debug_progbuf_59",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":480,
          "bitWidth":8,
          "name":"debug_progbuf_60",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":488,
          "bitWidth":8,
          "name":"debug_progbuf_61",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":496,
          "bitWidth":8,
          "name":"debug_progbuf_62",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":504,
          "bitWidth":8,
          "name":"debug_progbuf_63",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x300",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_whereto",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Instruction filled in by Debug Module to control hart in Debug Mode",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x338",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_abstract_0",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_abstract",
          "groupDesc":"Instructions generated by Debug Module",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x338",
          "bitOffset":32,
          "bitWidth":32,
          "name":"debug_abstract_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_abstract",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":0,
          "bitWidth":8,
          "name":"debug_flags_0",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"Memory region used to control hart going/resuming in Debug Mode",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8,
          "bitWidth":8,
          "name":"debug_flags_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":16,
          "bitWidth":8,
          "name":"debug_flags_2",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":24,
          "bitWidth":8,
          "name":"debug_flags_3",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":32,
          "bitWidth":8,
          "name":"debug_flags_4",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":40,
          "bitWidth":8,
          "name":"debug_flags_5",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":48,
          "bitWidth":8,
          "name":"debug_flags_6",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":56,
          "bitWidth":8,
          "name":"debug_flags_7",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":64,
          "bitWidth":8,
          "name":"debug_flags_8",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":72,
          "bitWidth":8,
          "name":"debug_flags_9",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":80,
          "bitWidth":8,
          "name":"debug_flags_10",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":88,
          "bitWidth":8,
          "name":"debug_flags_11",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":96,
          "bitWidth":8,
          "name":"debug_flags_12",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":104,
          "bitWidth":8,
          "name":"debug_flags_13",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":112,
          "bitWidth":8,
          "name":"debug_flags_14",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":120,
          "bitWidth":8,
          "name":"debug_flags_15",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":128,
          "bitWidth":8,
          "name":"debug_flags_16",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":136,
          "bitWidth":8,
          "name":"debug_flags_17",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":144,
          "bitWidth":8,
          "name":"debug_flags_18",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":152,
          "bitWidth":8,
          "name":"debug_flags_19",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":160,
          "bitWidth":8,
          "name":"debug_flags_20",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":168,
          "bitWidth":8,
          "name":"debug_flags_21",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":176,
          "bitWidth":8,
          "name":"debug_flags_22",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":184,
          "bitWidth":8,
          "name":"debug_flags_23",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":192,
          "bitWidth":8,
          "name":"debug_flags_24",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":200,
          "bitWidth":8,
          "name":"debug_flags_25",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":208,
          "bitWidth":8,
          "name":"debug_flags_26",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":216,
          "bitWidth":8,
          "name":"debug_flags_27",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":224,
          "bitWidth":8,
          "name":"debug_flags_28",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":232,
          "bitWidth":8,
          "name":"debug_flags_29",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":240,
          "bitWidth":8,
          "name":"debug_flags_30",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":248,
          "bitWidth":8,
          "name":"debug_flags_31",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":256,
          "bitWidth":8,
          "name":"debug_flags_32",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":264,
          "bitWidth":8,
          "name":"debug_flags_33",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":272,
          "bitWidth":8,
          "name":"debug_flags_34",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":280,
          "bitWidth":8,
          "name":"debug_flags_35",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":288,
          "bitWidth":8,
          "name":"debug_flags_36",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":296,
          "bitWidth":8,
          "name":"debug_flags_37",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":304,
          "bitWidth":8,
          "name":"debug_flags_38",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":312,
          "bitWidth":8,
          "name":"debug_flags_39",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":320,
          "bitWidth":8,
          "name":"debug_flags_40",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":328,
          "bitWidth":8,
          "name":"debug_flags_41",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":336,
          "bitWidth":8,
          "name":"debug_flags_42",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":344,
          "bitWidth":8,
          "name":"debug_flags_43",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":352,
          "bitWidth":8,
          "name":"debug_flags_44",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":360,
          "bitWidth":8,
          "name":"debug_flags_45",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":368,
          "bitWidth":8,
          "name":"debug_flags_46",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":376,
          "bitWidth":8,
          "name":"debug_flags_47",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":384,
          "bitWidth":8,
          "name":"debug_flags_48",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":392,
          "bitWidth":8,
          "name":"debug_flags_49",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":400,
          "bitWidth":8,
          "name":"debug_flags_50",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":408,
          "bitWidth":8,
          "name":"debug_flags_51",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":416,
          "bitWidth":8,
          "name":"debug_flags_52",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":424,
          "bitWidth":8,
          "name":"debug_flags_53",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":432,
          "bitWidth":8,
          "name":"debug_flags_54",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":440,
          "bitWidth":8,
          "name":"debug_flags_55",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":448,
          "bitWidth":8,
          "name":"debug_flags_56",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":456,
          "bitWidth":8,
          "name":"debug_flags_57",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":464,
          "bitWidth":8,
          "name":"debug_flags_58",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":472,
          "bitWidth":8,
          "name":"debug_flags_59",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":480,
          "bitWidth":8,
          "name":"debug_flags_60",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":488,
          "bitWidth":8,
          "name":"debug_flags_61",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":496,
          "bitWidth":8,
          "name":"debug_flags_62",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":504,
          "bitWidth":8,
          "name":"debug_flags_63",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":512,
          "bitWidth":8,
          "name":"debug_flags_64",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":520,
          "bitWidth":8,
          "name":"debug_flags_65",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":528,
          "bitWidth":8,
          "name":"debug_flags_66",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":536,
          "bitWidth":8,
          "name":"debug_flags_67",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":544,
          "bitWidth":8,
          "name":"debug_flags_68",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":552,
          "bitWidth":8,
          "name":"debug_flags_69",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":560,
          "bitWidth":8,
          "name":"debug_flags_70",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":568,
          "bitWidth":8,
          "name":"debug_flags_71",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":576,
          "bitWidth":8,
          "name":"debug_flags_72",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":584,
          "bitWidth":8,
          "name":"debug_flags_73",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":592,
          "bitWidth":8,
          "name":"debug_flags_74",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":600,
          "bitWidth":8,
          "name":"debug_flags_75",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":608,
          "bitWidth":8,
          "name":"debug_flags_76",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":616,
          "bitWidth":8,
          "name":"debug_flags_77",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":624,
          "bitWidth":8,
          "name":"debug_flags_78",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":632,
          "bitWidth":8,
          "name":"debug_flags_79",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":640,
          "bitWidth":8,
          "name":"debug_flags_80",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":648,
          "bitWidth":8,
          "name":"debug_flags_81",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":656,
          "bitWidth":8,
          "name":"debug_flags_82",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":664,
          "bitWidth":8,
          "name":"debug_flags_83",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":672,
          "bitWidth":8,
          "name":"debug_flags_84",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":680,
          "bitWidth":8,
          "name":"debug_flags_85",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":688,
          "bitWidth":8,
          "name":"debug_flags_86",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":696,
          "bitWidth":8,
          "name":"debug_flags_87",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":704,
          "bitWidth":8,
          "name":"debug_flags_88",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":712,
          "bitWidth":8,
          "name":"debug_flags_89",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":720,
          "bitWidth":8,
          "name":"debug_flags_90",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":728,
          "bitWidth":8,
          "name":"debug_flags_91",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":736,
          "bitWidth":8,
          "name":"debug_flags_92",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":744,
          "bitWidth":8,
          "name":"debug_flags_93",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":752,
          "bitWidth":8,
          "name":"debug_flags_94",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":760,
          "bitWidth":8,
          "name":"debug_flags_95",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":768,
          "bitWidth":8,
          "name":"debug_flags_96",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":776,
          "bitWidth":8,
          "name":"debug_flags_97",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":784,
          "bitWidth":8,
          "name":"debug_flags_98",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":792,
          "bitWidth":8,
          "name":"debug_flags_99",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":800,
          "bitWidth":8,
          "name":"debug_flags_100",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":808,
          "bitWidth":8,
          "name":"debug_flags_101",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":816,
          "bitWidth":8,
          "name":"debug_flags_102",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":824,
          "bitWidth":8,
          "name":"debug_flags_103",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":832,
          "bitWidth":8,
          "name":"debug_flags_104",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":840,
          "bitWidth":8,
          "name":"debug_flags_105",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":848,
          "bitWidth":8,
          "name":"debug_flags_106",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":856,
          "bitWidth":8,
          "name":"debug_flags_107",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":864,
          "bitWidth":8,
          "name":"debug_flags_108",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":872,
          "bitWidth":8,
          "name":"debug_flags_109",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":880,
          "bitWidth":8,
          "name":"debug_flags_110",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":888,
          "bitWidth":8,
          "name":"debug_flags_111",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":896,
          "bitWidth":8,
          "name":"debug_flags_112",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":904,
          "bitWidth":8,
          "name":"debug_flags_113",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":912,
          "bitWidth":8,
          "name":"debug_flags_114",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":920,
          "bitWidth":8,
          "name":"debug_flags_115",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":928,
          "bitWidth":8,
          "name":"debug_flags_116",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":936,
          "bitWidth":8,
          "name":"debug_flags_117",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":944,
          "bitWidth":8,
          "name":"debug_flags_118",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":952,
          "bitWidth":8,
          "name":"debug_flags_119",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":960,
          "bitWidth":8,
          "name":"debug_flags_120",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":968,
          "bitWidth":8,
          "name":"debug_flags_121",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":976,
          "bitWidth":8,
          "name":"debug_flags_122",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":984,
          "bitWidth":8,
          "name":"debug_flags_123",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":992,
          "bitWidth":8,
          "name":"debug_flags_124",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1000,
          "bitWidth":8,
          "name":"debug_flags_125",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1008,
          "bitWidth":8,
          "name":"debug_flags_126",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1016,
          "bitWidth":8,
          "name":"debug_flags_127",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1024,
          "bitWidth":8,
          "name":"debug_flags_128",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1032,
          "bitWidth":8,
          "name":"debug_flags_129",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1040,
          "bitWidth":8,
          "name":"debug_flags_130",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1048,
          "bitWidth":8,
          "name":"debug_flags_131",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1056,
          "bitWidth":8,
          "name":"debug_flags_132",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1064,
          "bitWidth":8,
          "name":"debug_flags_133",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1072,
          "bitWidth":8,
          "name":"debug_flags_134",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1080,
          "bitWidth":8,
          "name":"debug_flags_135",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1088,
          "bitWidth":8,
          "name":"debug_flags_136",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1096,
          "bitWidth":8,
          "name":"debug_flags_137",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1104,
          "bitWidth":8,
          "name":"debug_flags_138",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1112,
          "bitWidth":8,
          "name":"debug_flags_139",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1120,
          "bitWidth":8,
          "name":"debug_flags_140",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1128,
          "bitWidth":8,
          "name":"debug_flags_141",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1136,
          "bitWidth":8,
          "name":"debug_flags_142",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1144,
          "bitWidth":8,
          "name":"debug_flags_143",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1152,
          "bitWidth":8,
          "name":"debug_flags_144",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1160,
          "bitWidth":8,
          "name":"debug_flags_145",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1168,
          "bitWidth":8,
          "name":"debug_flags_146",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1176,
          "bitWidth":8,
          "name":"debug_flags_147",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1184,
          "bitWidth":8,
          "name":"debug_flags_148",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1192,
          "bitWidth":8,
          "name":"debug_flags_149",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1200,
          "bitWidth":8,
          "name":"debug_flags_150",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1208,
          "bitWidth":8,
          "name":"debug_flags_151",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1216,
          "bitWidth":8,
          "name":"debug_flags_152",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1224,
          "bitWidth":8,
          "name":"debug_flags_153",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1232,
          "bitWidth":8,
          "name":"debug_flags_154",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1240,
          "bitWidth":8,
          "name":"debug_flags_155",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1248,
          "bitWidth":8,
          "name":"debug_flags_156",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1256,
          "bitWidth":8,
          "name":"debug_flags_157",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1264,
          "bitWidth":8,
          "name":"debug_flags_158",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1272,
          "bitWidth":8,
          "name":"debug_flags_159",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1280,
          "bitWidth":8,
          "name":"debug_flags_160",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1288,
          "bitWidth":8,
          "name":"debug_flags_161",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1296,
          "bitWidth":8,
          "name":"debug_flags_162",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1304,
          "bitWidth":8,
          "name":"debug_flags_163",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1312,
          "bitWidth":8,
          "name":"debug_flags_164",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1320,
          "bitWidth":8,
          "name":"debug_flags_165",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1328,
          "bitWidth":8,
          "name":"debug_flags_166",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1336,
          "bitWidth":8,
          "name":"debug_flags_167",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1344,
          "bitWidth":8,
          "name":"debug_flags_168",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1352,
          "bitWidth":8,
          "name":"debug_flags_169",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1360,
          "bitWidth":8,
          "name":"debug_flags_170",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1368,
          "bitWidth":8,
          "name":"debug_flags_171",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1376,
          "bitWidth":8,
          "name":"debug_flags_172",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1384,
          "bitWidth":8,
          "name":"debug_flags_173",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1392,
          "bitWidth":8,
          "name":"debug_flags_174",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1400,
          "bitWidth":8,
          "name":"debug_flags_175",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1408,
          "bitWidth":8,
          "name":"debug_flags_176",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1416,
          "bitWidth":8,
          "name":"debug_flags_177",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1424,
          "bitWidth":8,
          "name":"debug_flags_178",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1432,
          "bitWidth":8,
          "name":"debug_flags_179",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1440,
          "bitWidth":8,
          "name":"debug_flags_180",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1448,
          "bitWidth":8,
          "name":"debug_flags_181",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1456,
          "bitWidth":8,
          "name":"debug_flags_182",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1464,
          "bitWidth":8,
          "name":"debug_flags_183",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1472,
          "bitWidth":8,
          "name":"debug_flags_184",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1480,
          "bitWidth":8,
          "name":"debug_flags_185",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1488,
          "bitWidth":8,
          "name":"debug_flags_186",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1496,
          "bitWidth":8,
          "name":"debug_flags_187",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1504,
          "bitWidth":8,
          "name":"debug_flags_188",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1512,
          "bitWidth":8,
          "name":"debug_flags_189",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1520,
          "bitWidth":8,
          "name":"debug_flags_190",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1528,
          "bitWidth":8,
          "name":"debug_flags_191",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1536,
          "bitWidth":8,
          "name":"debug_flags_192",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1544,
          "bitWidth":8,
          "name":"debug_flags_193",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1552,
          "bitWidth":8,
          "name":"debug_flags_194",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1560,
          "bitWidth":8,
          "name":"debug_flags_195",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1568,
          "bitWidth":8,
          "name":"debug_flags_196",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1576,
          "bitWidth":8,
          "name":"debug_flags_197",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1584,
          "bitWidth":8,
          "name":"debug_flags_198",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1592,
          "bitWidth":8,
          "name":"debug_flags_199",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1600,
          "bitWidth":8,
          "name":"debug_flags_200",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1608,
          "bitWidth":8,
          "name":"debug_flags_201",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1616,
          "bitWidth":8,
          "name":"debug_flags_202",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1624,
          "bitWidth":8,
          "name":"debug_flags_203",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1632,
          "bitWidth":8,
          "name":"debug_flags_204",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1640,
          "bitWidth":8,
          "name":"debug_flags_205",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1648,
          "bitWidth":8,
          "name":"debug_flags_206",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1656,
          "bitWidth":8,
          "name":"debug_flags_207",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1664,
          "bitWidth":8,
          "name":"debug_flags_208",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1672,
          "bitWidth":8,
          "name":"debug_flags_209",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1680,
          "bitWidth":8,
          "name":"debug_flags_210",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1688,
          "bitWidth":8,
          "name":"debug_flags_211",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1696,
          "bitWidth":8,
          "name":"debug_flags_212",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1704,
          "bitWidth":8,
          "name":"debug_flags_213",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1712,
          "bitWidth":8,
          "name":"debug_flags_214",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1720,
          "bitWidth":8,
          "name":"debug_flags_215",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1728,
          "bitWidth":8,
          "name":"debug_flags_216",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1736,
          "bitWidth":8,
          "name":"debug_flags_217",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1744,
          "bitWidth":8,
          "name":"debug_flags_218",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1752,
          "bitWidth":8,
          "name":"debug_flags_219",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1760,
          "bitWidth":8,
          "name":"debug_flags_220",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1768,
          "bitWidth":8,
          "name":"debug_flags_221",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1776,
          "bitWidth":8,
          "name":"debug_flags_222",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1784,
          "bitWidth":8,
          "name":"debug_flags_223",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1792,
          "bitWidth":8,
          "name":"debug_flags_224",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1800,
          "bitWidth":8,
          "name":"debug_flags_225",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1808,
          "bitWidth":8,
          "name":"debug_flags_226",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1816,
          "bitWidth":8,
          "name":"debug_flags_227",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1824,
          "bitWidth":8,
          "name":"debug_flags_228",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1832,
          "bitWidth":8,
          "name":"debug_flags_229",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1840,
          "bitWidth":8,
          "name":"debug_flags_230",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1848,
          "bitWidth":8,
          "name":"debug_flags_231",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1856,
          "bitWidth":8,
          "name":"debug_flags_232",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1864,
          "bitWidth":8,
          "name":"debug_flags_233",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1872,
          "bitWidth":8,
          "name":"debug_flags_234",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1880,
          "bitWidth":8,
          "name":"debug_flags_235",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1888,
          "bitWidth":8,
          "name":"debug_flags_236",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1896,
          "bitWidth":8,
          "name":"debug_flags_237",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1904,
          "bitWidth":8,
          "name":"debug_flags_238",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1912,
          "bitWidth":8,
          "name":"debug_flags_239",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1920,
          "bitWidth":8,
          "name":"debug_flags_240",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1928,
          "bitWidth":8,
          "name":"debug_flags_241",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1936,
          "bitWidth":8,
          "name":"debug_flags_242",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1944,
          "bitWidth":8,
          "name":"debug_flags_243",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1952,
          "bitWidth":8,
          "name":"debug_flags_244",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1960,
          "bitWidth":8,
          "name":"debug_flags_245",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1968,
          "bitWidth":8,
          "name":"debug_flags_246",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1976,
          "bitWidth":8,
          "name":"debug_flags_247",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1984,
          "bitWidth":8,
          "name":"debug_flags_248",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":1992,
          "bitWidth":8,
          "name":"debug_flags_249",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2000,
          "bitWidth":8,
          "name":"debug_flags_250",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2008,
          "bitWidth":8,
          "name":"debug_flags_251",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2016,
          "bitWidth":8,
          "name":"debug_flags_252",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2024,
          "bitWidth":8,
          "name":"debug_flags_253",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2032,
          "bitWidth":8,
          "name":"debug_flags_254",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2040,
          "bitWidth":8,
          "name":"debug_flags_255",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2048,
          "bitWidth":8,
          "name":"debug_flags_256",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2056,
          "bitWidth":8,
          "name":"debug_flags_257",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2064,
          "bitWidth":8,
          "name":"debug_flags_258",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2072,
          "bitWidth":8,
          "name":"debug_flags_259",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2080,
          "bitWidth":8,
          "name":"debug_flags_260",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2088,
          "bitWidth":8,
          "name":"debug_flags_261",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2096,
          "bitWidth":8,
          "name":"debug_flags_262",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2104,
          "bitWidth":8,
          "name":"debug_flags_263",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2112,
          "bitWidth":8,
          "name":"debug_flags_264",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2120,
          "bitWidth":8,
          "name":"debug_flags_265",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2128,
          "bitWidth":8,
          "name":"debug_flags_266",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2136,
          "bitWidth":8,
          "name":"debug_flags_267",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2144,
          "bitWidth":8,
          "name":"debug_flags_268",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2152,
          "bitWidth":8,
          "name":"debug_flags_269",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2160,
          "bitWidth":8,
          "name":"debug_flags_270",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2168,
          "bitWidth":8,
          "name":"debug_flags_271",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2176,
          "bitWidth":8,
          "name":"debug_flags_272",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2184,
          "bitWidth":8,
          "name":"debug_flags_273",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2192,
          "bitWidth":8,
          "name":"debug_flags_274",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2200,
          "bitWidth":8,
          "name":"debug_flags_275",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2208,
          "bitWidth":8,
          "name":"debug_flags_276",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2216,
          "bitWidth":8,
          "name":"debug_flags_277",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2224,
          "bitWidth":8,
          "name":"debug_flags_278",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2232,
          "bitWidth":8,
          "name":"debug_flags_279",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2240,
          "bitWidth":8,
          "name":"debug_flags_280",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2248,
          "bitWidth":8,
          "name":"debug_flags_281",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2256,
          "bitWidth":8,
          "name":"debug_flags_282",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2264,
          "bitWidth":8,
          "name":"debug_flags_283",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2272,
          "bitWidth":8,
          "name":"debug_flags_284",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2280,
          "bitWidth":8,
          "name":"debug_flags_285",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2288,
          "bitWidth":8,
          "name":"debug_flags_286",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2296,
          "bitWidth":8,
          "name":"debug_flags_287",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2304,
          "bitWidth":8,
          "name":"debug_flags_288",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2312,
          "bitWidth":8,
          "name":"debug_flags_289",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2320,
          "bitWidth":8,
          "name":"debug_flags_290",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2328,
          "bitWidth":8,
          "name":"debug_flags_291",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2336,
          "bitWidth":8,
          "name":"debug_flags_292",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2344,
          "bitWidth":8,
          "name":"debug_flags_293",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2352,
          "bitWidth":8,
          "name":"debug_flags_294",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2360,
          "bitWidth":8,
          "name":"debug_flags_295",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2368,
          "bitWidth":8,
          "name":"debug_flags_296",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2376,
          "bitWidth":8,
          "name":"debug_flags_297",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2384,
          "bitWidth":8,
          "name":"debug_flags_298",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2392,
          "bitWidth":8,
          "name":"debug_flags_299",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2400,
          "bitWidth":8,
          "name":"debug_flags_300",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2408,
          "bitWidth":8,
          "name":"debug_flags_301",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2416,
          "bitWidth":8,
          "name":"debug_flags_302",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2424,
          "bitWidth":8,
          "name":"debug_flags_303",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2432,
          "bitWidth":8,
          "name":"debug_flags_304",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2440,
          "bitWidth":8,
          "name":"debug_flags_305",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2448,
          "bitWidth":8,
          "name":"debug_flags_306",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2456,
          "bitWidth":8,
          "name":"debug_flags_307",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2464,
          "bitWidth":8,
          "name":"debug_flags_308",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2472,
          "bitWidth":8,
          "name":"debug_flags_309",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2480,
          "bitWidth":8,
          "name":"debug_flags_310",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2488,
          "bitWidth":8,
          "name":"debug_flags_311",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2496,
          "bitWidth":8,
          "name":"debug_flags_312",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2504,
          "bitWidth":8,
          "name":"debug_flags_313",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2512,
          "bitWidth":8,
          "name":"debug_flags_314",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2520,
          "bitWidth":8,
          "name":"debug_flags_315",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2528,
          "bitWidth":8,
          "name":"debug_flags_316",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2536,
          "bitWidth":8,
          "name":"debug_flags_317",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2544,
          "bitWidth":8,
          "name":"debug_flags_318",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2552,
          "bitWidth":8,
          "name":"debug_flags_319",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2560,
          "bitWidth":8,
          "name":"debug_flags_320",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2568,
          "bitWidth":8,
          "name":"debug_flags_321",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2576,
          "bitWidth":8,
          "name":"debug_flags_322",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2584,
          "bitWidth":8,
          "name":"debug_flags_323",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2592,
          "bitWidth":8,
          "name":"debug_flags_324",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2600,
          "bitWidth":8,
          "name":"debug_flags_325",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2608,
          "bitWidth":8,
          "name":"debug_flags_326",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2616,
          "bitWidth":8,
          "name":"debug_flags_327",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2624,
          "bitWidth":8,
          "name":"debug_flags_328",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2632,
          "bitWidth":8,
          "name":"debug_flags_329",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2640,
          "bitWidth":8,
          "name":"debug_flags_330",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2648,
          "bitWidth":8,
          "name":"debug_flags_331",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2656,
          "bitWidth":8,
          "name":"debug_flags_332",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2664,
          "bitWidth":8,
          "name":"debug_flags_333",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2672,
          "bitWidth":8,
          "name":"debug_flags_334",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2680,
          "bitWidth":8,
          "name":"debug_flags_335",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2688,
          "bitWidth":8,
          "name":"debug_flags_336",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2696,
          "bitWidth":8,
          "name":"debug_flags_337",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2704,
          "bitWidth":8,
          "name":"debug_flags_338",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2712,
          "bitWidth":8,
          "name":"debug_flags_339",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2720,
          "bitWidth":8,
          "name":"debug_flags_340",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2728,
          "bitWidth":8,
          "name":"debug_flags_341",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2736,
          "bitWidth":8,
          "name":"debug_flags_342",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2744,
          "bitWidth":8,
          "name":"debug_flags_343",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2752,
          "bitWidth":8,
          "name":"debug_flags_344",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2760,
          "bitWidth":8,
          "name":"debug_flags_345",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2768,
          "bitWidth":8,
          "name":"debug_flags_346",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2776,
          "bitWidth":8,
          "name":"debug_flags_347",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2784,
          "bitWidth":8,
          "name":"debug_flags_348",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2792,
          "bitWidth":8,
          "name":"debug_flags_349",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2800,
          "bitWidth":8,
          "name":"debug_flags_350",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2808,
          "bitWidth":8,
          "name":"debug_flags_351",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2816,
          "bitWidth":8,
          "name":"debug_flags_352",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2824,
          "bitWidth":8,
          "name":"debug_flags_353",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2832,
          "bitWidth":8,
          "name":"debug_flags_354",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2840,
          "bitWidth":8,
          "name":"debug_flags_355",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2848,
          "bitWidth":8,
          "name":"debug_flags_356",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2856,
          "bitWidth":8,
          "name":"debug_flags_357",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2864,
          "bitWidth":8,
          "name":"debug_flags_358",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2872,
          "bitWidth":8,
          "name":"debug_flags_359",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2880,
          "bitWidth":8,
          "name":"debug_flags_360",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2888,
          "bitWidth":8,
          "name":"debug_flags_361",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2896,
          "bitWidth":8,
          "name":"debug_flags_362",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2904,
          "bitWidth":8,
          "name":"debug_flags_363",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2912,
          "bitWidth":8,
          "name":"debug_flags_364",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2920,
          "bitWidth":8,
          "name":"debug_flags_365",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2928,
          "bitWidth":8,
          "name":"debug_flags_366",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2936,
          "bitWidth":8,
          "name":"debug_flags_367",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2944,
          "bitWidth":8,
          "name":"debug_flags_368",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2952,
          "bitWidth":8,
          "name":"debug_flags_369",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2960,
          "bitWidth":8,
          "name":"debug_flags_370",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2968,
          "bitWidth":8,
          "name":"debug_flags_371",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2976,
          "bitWidth":8,
          "name":"debug_flags_372",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2984,
          "bitWidth":8,
          "name":"debug_flags_373",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":2992,
          "bitWidth":8,
          "name":"debug_flags_374",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3000,
          "bitWidth":8,
          "name":"debug_flags_375",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3008,
          "bitWidth":8,
          "name":"debug_flags_376",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3016,
          "bitWidth":8,
          "name":"debug_flags_377",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3024,
          "bitWidth":8,
          "name":"debug_flags_378",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3032,
          "bitWidth":8,
          "name":"debug_flags_379",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3040,
          "bitWidth":8,
          "name":"debug_flags_380",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3048,
          "bitWidth":8,
          "name":"debug_flags_381",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3056,
          "bitWidth":8,
          "name":"debug_flags_382",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3064,
          "bitWidth":8,
          "name":"debug_flags_383",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3072,
          "bitWidth":8,
          "name":"debug_flags_384",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3080,
          "bitWidth":8,
          "name":"debug_flags_385",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3088,
          "bitWidth":8,
          "name":"debug_flags_386",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3096,
          "bitWidth":8,
          "name":"debug_flags_387",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3104,
          "bitWidth":8,
          "name":"debug_flags_388",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3112,
          "bitWidth":8,
          "name":"debug_flags_389",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3120,
          "bitWidth":8,
          "name":"debug_flags_390",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3128,
          "bitWidth":8,
          "name":"debug_flags_391",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3136,
          "bitWidth":8,
          "name":"debug_flags_392",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3144,
          "bitWidth":8,
          "name":"debug_flags_393",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3152,
          "bitWidth":8,
          "name":"debug_flags_394",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3160,
          "bitWidth":8,
          "name":"debug_flags_395",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3168,
          "bitWidth":8,
          "name":"debug_flags_396",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3176,
          "bitWidth":8,
          "name":"debug_flags_397",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3184,
          "bitWidth":8,
          "name":"debug_flags_398",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3192,
          "bitWidth":8,
          "name":"debug_flags_399",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3200,
          "bitWidth":8,
          "name":"debug_flags_400",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3208,
          "bitWidth":8,
          "name":"debug_flags_401",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3216,
          "bitWidth":8,
          "name":"debug_flags_402",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3224,
          "bitWidth":8,
          "name":"debug_flags_403",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3232,
          "bitWidth":8,
          "name":"debug_flags_404",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3240,
          "bitWidth":8,
          "name":"debug_flags_405",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3248,
          "bitWidth":8,
          "name":"debug_flags_406",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3256,
          "bitWidth":8,
          "name":"debug_flags_407",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3264,
          "bitWidth":8,
          "name":"debug_flags_408",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3272,
          "bitWidth":8,
          "name":"debug_flags_409",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3280,
          "bitWidth":8,
          "name":"debug_flags_410",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3288,
          "bitWidth":8,
          "name":"debug_flags_411",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3296,
          "bitWidth":8,
          "name":"debug_flags_412",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3304,
          "bitWidth":8,
          "name":"debug_flags_413",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3312,
          "bitWidth":8,
          "name":"debug_flags_414",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3320,
          "bitWidth":8,
          "name":"debug_flags_415",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3328,
          "bitWidth":8,
          "name":"debug_flags_416",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3336,
          "bitWidth":8,
          "name":"debug_flags_417",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3344,
          "bitWidth":8,
          "name":"debug_flags_418",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3352,
          "bitWidth":8,
          "name":"debug_flags_419",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3360,
          "bitWidth":8,
          "name":"debug_flags_420",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3368,
          "bitWidth":8,
          "name":"debug_flags_421",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3376,
          "bitWidth":8,
          "name":"debug_flags_422",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3384,
          "bitWidth":8,
          "name":"debug_flags_423",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3392,
          "bitWidth":8,
          "name":"debug_flags_424",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3400,
          "bitWidth":8,
          "name":"debug_flags_425",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3408,
          "bitWidth":8,
          "name":"debug_flags_426",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3416,
          "bitWidth":8,
          "name":"debug_flags_427",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3424,
          "bitWidth":8,
          "name":"debug_flags_428",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3432,
          "bitWidth":8,
          "name":"debug_flags_429",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3440,
          "bitWidth":8,
          "name":"debug_flags_430",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3448,
          "bitWidth":8,
          "name":"debug_flags_431",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3456,
          "bitWidth":8,
          "name":"debug_flags_432",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3464,
          "bitWidth":8,
          "name":"debug_flags_433",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3472,
          "bitWidth":8,
          "name":"debug_flags_434",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3480,
          "bitWidth":8,
          "name":"debug_flags_435",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3488,
          "bitWidth":8,
          "name":"debug_flags_436",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3496,
          "bitWidth":8,
          "name":"debug_flags_437",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3504,
          "bitWidth":8,
          "name":"debug_flags_438",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3512,
          "bitWidth":8,
          "name":"debug_flags_439",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3520,
          "bitWidth":8,
          "name":"debug_flags_440",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3528,
          "bitWidth":8,
          "name":"debug_flags_441",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3536,
          "bitWidth":8,
          "name":"debug_flags_442",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3544,
          "bitWidth":8,
          "name":"debug_flags_443",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3552,
          "bitWidth":8,
          "name":"debug_flags_444",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3560,
          "bitWidth":8,
          "name":"debug_flags_445",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3568,
          "bitWidth":8,
          "name":"debug_flags_446",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3576,
          "bitWidth":8,
          "name":"debug_flags_447",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3584,
          "bitWidth":8,
          "name":"debug_flags_448",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3592,
          "bitWidth":8,
          "name":"debug_flags_449",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3600,
          "bitWidth":8,
          "name":"debug_flags_450",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3608,
          "bitWidth":8,
          "name":"debug_flags_451",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3616,
          "bitWidth":8,
          "name":"debug_flags_452",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3624,
          "bitWidth":8,
          "name":"debug_flags_453",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3632,
          "bitWidth":8,
          "name":"debug_flags_454",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3640,
          "bitWidth":8,
          "name":"debug_flags_455",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3648,
          "bitWidth":8,
          "name":"debug_flags_456",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3656,
          "bitWidth":8,
          "name":"debug_flags_457",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3664,
          "bitWidth":8,
          "name":"debug_flags_458",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3672,
          "bitWidth":8,
          "name":"debug_flags_459",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3680,
          "bitWidth":8,
          "name":"debug_flags_460",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3688,
          "bitWidth":8,
          "name":"debug_flags_461",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3696,
          "bitWidth":8,
          "name":"debug_flags_462",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3704,
          "bitWidth":8,
          "name":"debug_flags_463",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3712,
          "bitWidth":8,
          "name":"debug_flags_464",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3720,
          "bitWidth":8,
          "name":"debug_flags_465",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3728,
          "bitWidth":8,
          "name":"debug_flags_466",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3736,
          "bitWidth":8,
          "name":"debug_flags_467",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3744,
          "bitWidth":8,
          "name":"debug_flags_468",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3752,
          "bitWidth":8,
          "name":"debug_flags_469",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3760,
          "bitWidth":8,
          "name":"debug_flags_470",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3768,
          "bitWidth":8,
          "name":"debug_flags_471",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3776,
          "bitWidth":8,
          "name":"debug_flags_472",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3784,
          "bitWidth":8,
          "name":"debug_flags_473",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3792,
          "bitWidth":8,
          "name":"debug_flags_474",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3800,
          "bitWidth":8,
          "name":"debug_flags_475",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3808,
          "bitWidth":8,
          "name":"debug_flags_476",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3816,
          "bitWidth":8,
          "name":"debug_flags_477",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3824,
          "bitWidth":8,
          "name":"debug_flags_478",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3832,
          "bitWidth":8,
          "name":"debug_flags_479",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3840,
          "bitWidth":8,
          "name":"debug_flags_480",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3848,
          "bitWidth":8,
          "name":"debug_flags_481",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3856,
          "bitWidth":8,
          "name":"debug_flags_482",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3864,
          "bitWidth":8,
          "name":"debug_flags_483",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3872,
          "bitWidth":8,
          "name":"debug_flags_484",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3880,
          "bitWidth":8,
          "name":"debug_flags_485",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3888,
          "bitWidth":8,
          "name":"debug_flags_486",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3896,
          "bitWidth":8,
          "name":"debug_flags_487",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3904,
          "bitWidth":8,
          "name":"debug_flags_488",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3912,
          "bitWidth":8,
          "name":"debug_flags_489",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3920,
          "bitWidth":8,
          "name":"debug_flags_490",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3928,
          "bitWidth":8,
          "name":"debug_flags_491",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3936,
          "bitWidth":8,
          "name":"debug_flags_492",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3944,
          "bitWidth":8,
          "name":"debug_flags_493",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3952,
          "bitWidth":8,
          "name":"debug_flags_494",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3960,
          "bitWidth":8,
          "name":"debug_flags_495",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3968,
          "bitWidth":8,
          "name":"debug_flags_496",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3976,
          "bitWidth":8,
          "name":"debug_flags_497",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3984,
          "bitWidth":8,
          "name":"debug_flags_498",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":3992,
          "bitWidth":8,
          "name":"debug_flags_499",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4000,
          "bitWidth":8,
          "name":"debug_flags_500",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4008,
          "bitWidth":8,
          "name":"debug_flags_501",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4016,
          "bitWidth":8,
          "name":"debug_flags_502",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4024,
          "bitWidth":8,
          "name":"debug_flags_503",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4032,
          "bitWidth":8,
          "name":"debug_flags_504",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4040,
          "bitWidth":8,
          "name":"debug_flags_505",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4048,
          "bitWidth":8,
          "name":"debug_flags_506",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4056,
          "bitWidth":8,
          "name":"debug_flags_507",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4064,
          "bitWidth":8,
          "name":"debug_flags_508",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4072,
          "bitWidth":8,
          "name":"debug_flags_509",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4080,
          "bitWidth":8,
          "name":"debug_flags_510",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4088,
          "bitWidth":8,
          "name":"debug_flags_511",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4096,
          "bitWidth":8,
          "name":"debug_flags_512",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4104,
          "bitWidth":8,
          "name":"debug_flags_513",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4112,
          "bitWidth":8,
          "name":"debug_flags_514",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4120,
          "bitWidth":8,
          "name":"debug_flags_515",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4128,
          "bitWidth":8,
          "name":"debug_flags_516",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4136,
          "bitWidth":8,
          "name":"debug_flags_517",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4144,
          "bitWidth":8,
          "name":"debug_flags_518",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4152,
          "bitWidth":8,
          "name":"debug_flags_519",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4160,
          "bitWidth":8,
          "name":"debug_flags_520",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4168,
          "bitWidth":8,
          "name":"debug_flags_521",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4176,
          "bitWidth":8,
          "name":"debug_flags_522",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4184,
          "bitWidth":8,
          "name":"debug_flags_523",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4192,
          "bitWidth":8,
          "name":"debug_flags_524",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4200,
          "bitWidth":8,
          "name":"debug_flags_525",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4208,
          "bitWidth":8,
          "name":"debug_flags_526",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4216,
          "bitWidth":8,
          "name":"debug_flags_527",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4224,
          "bitWidth":8,
          "name":"debug_flags_528",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4232,
          "bitWidth":8,
          "name":"debug_flags_529",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4240,
          "bitWidth":8,
          "name":"debug_flags_530",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4248,
          "bitWidth":8,
          "name":"debug_flags_531",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4256,
          "bitWidth":8,
          "name":"debug_flags_532",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4264,
          "bitWidth":8,
          "name":"debug_flags_533",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4272,
          "bitWidth":8,
          "name":"debug_flags_534",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4280,
          "bitWidth":8,
          "name":"debug_flags_535",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4288,
          "bitWidth":8,
          "name":"debug_flags_536",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4296,
          "bitWidth":8,
          "name":"debug_flags_537",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4304,
          "bitWidth":8,
          "name":"debug_flags_538",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4312,
          "bitWidth":8,
          "name":"debug_flags_539",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4320,
          "bitWidth":8,
          "name":"debug_flags_540",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4328,
          "bitWidth":8,
          "name":"debug_flags_541",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4336,
          "bitWidth":8,
          "name":"debug_flags_542",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4344,
          "bitWidth":8,
          "name":"debug_flags_543",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4352,
          "bitWidth":8,
          "name":"debug_flags_544",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4360,
          "bitWidth":8,
          "name":"debug_flags_545",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4368,
          "bitWidth":8,
          "name":"debug_flags_546",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4376,
          "bitWidth":8,
          "name":"debug_flags_547",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4384,
          "bitWidth":8,
          "name":"debug_flags_548",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4392,
          "bitWidth":8,
          "name":"debug_flags_549",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4400,
          "bitWidth":8,
          "name":"debug_flags_550",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4408,
          "bitWidth":8,
          "name":"debug_flags_551",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4416,
          "bitWidth":8,
          "name":"debug_flags_552",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4424,
          "bitWidth":8,
          "name":"debug_flags_553",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4432,
          "bitWidth":8,
          "name":"debug_flags_554",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4440,
          "bitWidth":8,
          "name":"debug_flags_555",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4448,
          "bitWidth":8,
          "name":"debug_flags_556",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4456,
          "bitWidth":8,
          "name":"debug_flags_557",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4464,
          "bitWidth":8,
          "name":"debug_flags_558",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4472,
          "bitWidth":8,
          "name":"debug_flags_559",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4480,
          "bitWidth":8,
          "name":"debug_flags_560",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4488,
          "bitWidth":8,
          "name":"debug_flags_561",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4496,
          "bitWidth":8,
          "name":"debug_flags_562",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4504,
          "bitWidth":8,
          "name":"debug_flags_563",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4512,
          "bitWidth":8,
          "name":"debug_flags_564",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4520,
          "bitWidth":8,
          "name":"debug_flags_565",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4528,
          "bitWidth":8,
          "name":"debug_flags_566",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4536,
          "bitWidth":8,
          "name":"debug_flags_567",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4544,
          "bitWidth":8,
          "name":"debug_flags_568",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4552,
          "bitWidth":8,
          "name":"debug_flags_569",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4560,
          "bitWidth":8,
          "name":"debug_flags_570",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4568,
          "bitWidth":8,
          "name":"debug_flags_571",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4576,
          "bitWidth":8,
          "name":"debug_flags_572",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4584,
          "bitWidth":8,
          "name":"debug_flags_573",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4592,
          "bitWidth":8,
          "name":"debug_flags_574",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4600,
          "bitWidth":8,
          "name":"debug_flags_575",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4608,
          "bitWidth":8,
          "name":"debug_flags_576",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4616,
          "bitWidth":8,
          "name":"debug_flags_577",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4624,
          "bitWidth":8,
          "name":"debug_flags_578",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4632,
          "bitWidth":8,
          "name":"debug_flags_579",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4640,
          "bitWidth":8,
          "name":"debug_flags_580",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4648,
          "bitWidth":8,
          "name":"debug_flags_581",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4656,
          "bitWidth":8,
          "name":"debug_flags_582",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4664,
          "bitWidth":8,
          "name":"debug_flags_583",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4672,
          "bitWidth":8,
          "name":"debug_flags_584",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4680,
          "bitWidth":8,
          "name":"debug_flags_585",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4688,
          "bitWidth":8,
          "name":"debug_flags_586",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4696,
          "bitWidth":8,
          "name":"debug_flags_587",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4704,
          "bitWidth":8,
          "name":"debug_flags_588",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4712,
          "bitWidth":8,
          "name":"debug_flags_589",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4720,
          "bitWidth":8,
          "name":"debug_flags_590",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4728,
          "bitWidth":8,
          "name":"debug_flags_591",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4736,
          "bitWidth":8,
          "name":"debug_flags_592",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4744,
          "bitWidth":8,
          "name":"debug_flags_593",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4752,
          "bitWidth":8,
          "name":"debug_flags_594",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4760,
          "bitWidth":8,
          "name":"debug_flags_595",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4768,
          "bitWidth":8,
          "name":"debug_flags_596",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4776,
          "bitWidth":8,
          "name":"debug_flags_597",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4784,
          "bitWidth":8,
          "name":"debug_flags_598",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4792,
          "bitWidth":8,
          "name":"debug_flags_599",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4800,
          "bitWidth":8,
          "name":"debug_flags_600",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4808,
          "bitWidth":8,
          "name":"debug_flags_601",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4816,
          "bitWidth":8,
          "name":"debug_flags_602",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4824,
          "bitWidth":8,
          "name":"debug_flags_603",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4832,
          "bitWidth":8,
          "name":"debug_flags_604",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4840,
          "bitWidth":8,
          "name":"debug_flags_605",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4848,
          "bitWidth":8,
          "name":"debug_flags_606",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4856,
          "bitWidth":8,
          "name":"debug_flags_607",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4864,
          "bitWidth":8,
          "name":"debug_flags_608",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4872,
          "bitWidth":8,
          "name":"debug_flags_609",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4880,
          "bitWidth":8,
          "name":"debug_flags_610",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4888,
          "bitWidth":8,
          "name":"debug_flags_611",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4896,
          "bitWidth":8,
          "name":"debug_flags_612",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4904,
          "bitWidth":8,
          "name":"debug_flags_613",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4912,
          "bitWidth":8,
          "name":"debug_flags_614",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4920,
          "bitWidth":8,
          "name":"debug_flags_615",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4928,
          "bitWidth":8,
          "name":"debug_flags_616",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4936,
          "bitWidth":8,
          "name":"debug_flags_617",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4944,
          "bitWidth":8,
          "name":"debug_flags_618",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4952,
          "bitWidth":8,
          "name":"debug_flags_619",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4960,
          "bitWidth":8,
          "name":"debug_flags_620",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4968,
          "bitWidth":8,
          "name":"debug_flags_621",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4976,
          "bitWidth":8,
          "name":"debug_flags_622",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4984,
          "bitWidth":8,
          "name":"debug_flags_623",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":4992,
          "bitWidth":8,
          "name":"debug_flags_624",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5000,
          "bitWidth":8,
          "name":"debug_flags_625",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5008,
          "bitWidth":8,
          "name":"debug_flags_626",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5016,
          "bitWidth":8,
          "name":"debug_flags_627",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5024,
          "bitWidth":8,
          "name":"debug_flags_628",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5032,
          "bitWidth":8,
          "name":"debug_flags_629",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5040,
          "bitWidth":8,
          "name":"debug_flags_630",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5048,
          "bitWidth":8,
          "name":"debug_flags_631",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5056,
          "bitWidth":8,
          "name":"debug_flags_632",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5064,
          "bitWidth":8,
          "name":"debug_flags_633",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5072,
          "bitWidth":8,
          "name":"debug_flags_634",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5080,
          "bitWidth":8,
          "name":"debug_flags_635",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5088,
          "bitWidth":8,
          "name":"debug_flags_636",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5096,
          "bitWidth":8,
          "name":"debug_flags_637",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5104,
          "bitWidth":8,
          "name":"debug_flags_638",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5112,
          "bitWidth":8,
          "name":"debug_flags_639",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5120,
          "bitWidth":8,
          "name":"debug_flags_640",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5128,
          "bitWidth":8,
          "name":"debug_flags_641",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5136,
          "bitWidth":8,
          "name":"debug_flags_642",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5144,
          "bitWidth":8,
          "name":"debug_flags_643",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5152,
          "bitWidth":8,
          "name":"debug_flags_644",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5160,
          "bitWidth":8,
          "name":"debug_flags_645",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5168,
          "bitWidth":8,
          "name":"debug_flags_646",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5176,
          "bitWidth":8,
          "name":"debug_flags_647",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5184,
          "bitWidth":8,
          "name":"debug_flags_648",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5192,
          "bitWidth":8,
          "name":"debug_flags_649",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5200,
          "bitWidth":8,
          "name":"debug_flags_650",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5208,
          "bitWidth":8,
          "name":"debug_flags_651",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5216,
          "bitWidth":8,
          "name":"debug_flags_652",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5224,
          "bitWidth":8,
          "name":"debug_flags_653",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5232,
          "bitWidth":8,
          "name":"debug_flags_654",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5240,
          "bitWidth":8,
          "name":"debug_flags_655",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5248,
          "bitWidth":8,
          "name":"debug_flags_656",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5256,
          "bitWidth":8,
          "name":"debug_flags_657",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5264,
          "bitWidth":8,
          "name":"debug_flags_658",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5272,
          "bitWidth":8,
          "name":"debug_flags_659",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5280,
          "bitWidth":8,
          "name":"debug_flags_660",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5288,
          "bitWidth":8,
          "name":"debug_flags_661",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5296,
          "bitWidth":8,
          "name":"debug_flags_662",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5304,
          "bitWidth":8,
          "name":"debug_flags_663",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5312,
          "bitWidth":8,
          "name":"debug_flags_664",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5320,
          "bitWidth":8,
          "name":"debug_flags_665",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5328,
          "bitWidth":8,
          "name":"debug_flags_666",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5336,
          "bitWidth":8,
          "name":"debug_flags_667",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5344,
          "bitWidth":8,
          "name":"debug_flags_668",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5352,
          "bitWidth":8,
          "name":"debug_flags_669",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5360,
          "bitWidth":8,
          "name":"debug_flags_670",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5368,
          "bitWidth":8,
          "name":"debug_flags_671",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5376,
          "bitWidth":8,
          "name":"debug_flags_672",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5384,
          "bitWidth":8,
          "name":"debug_flags_673",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5392,
          "bitWidth":8,
          "name":"debug_flags_674",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5400,
          "bitWidth":8,
          "name":"debug_flags_675",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5408,
          "bitWidth":8,
          "name":"debug_flags_676",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5416,
          "bitWidth":8,
          "name":"debug_flags_677",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5424,
          "bitWidth":8,
          "name":"debug_flags_678",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5432,
          "bitWidth":8,
          "name":"debug_flags_679",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5440,
          "bitWidth":8,
          "name":"debug_flags_680",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5448,
          "bitWidth":8,
          "name":"debug_flags_681",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5456,
          "bitWidth":8,
          "name":"debug_flags_682",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5464,
          "bitWidth":8,
          "name":"debug_flags_683",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5472,
          "bitWidth":8,
          "name":"debug_flags_684",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5480,
          "bitWidth":8,
          "name":"debug_flags_685",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5488,
          "bitWidth":8,
          "name":"debug_flags_686",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5496,
          "bitWidth":8,
          "name":"debug_flags_687",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5504,
          "bitWidth":8,
          "name":"debug_flags_688",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5512,
          "bitWidth":8,
          "name":"debug_flags_689",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5520,
          "bitWidth":8,
          "name":"debug_flags_690",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5528,
          "bitWidth":8,
          "name":"debug_flags_691",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5536,
          "bitWidth":8,
          "name":"debug_flags_692",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5544,
          "bitWidth":8,
          "name":"debug_flags_693",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5552,
          "bitWidth":8,
          "name":"debug_flags_694",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5560,
          "bitWidth":8,
          "name":"debug_flags_695",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5568,
          "bitWidth":8,
          "name":"debug_flags_696",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5576,
          "bitWidth":8,
          "name":"debug_flags_697",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5584,
          "bitWidth":8,
          "name":"debug_flags_698",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5592,
          "bitWidth":8,
          "name":"debug_flags_699",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5600,
          "bitWidth":8,
          "name":"debug_flags_700",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5608,
          "bitWidth":8,
          "name":"debug_flags_701",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5616,
          "bitWidth":8,
          "name":"debug_flags_702",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5624,
          "bitWidth":8,
          "name":"debug_flags_703",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5632,
          "bitWidth":8,
          "name":"debug_flags_704",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5640,
          "bitWidth":8,
          "name":"debug_flags_705",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5648,
          "bitWidth":8,
          "name":"debug_flags_706",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5656,
          "bitWidth":8,
          "name":"debug_flags_707",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5664,
          "bitWidth":8,
          "name":"debug_flags_708",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5672,
          "bitWidth":8,
          "name":"debug_flags_709",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5680,
          "bitWidth":8,
          "name":"debug_flags_710",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5688,
          "bitWidth":8,
          "name":"debug_flags_711",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5696,
          "bitWidth":8,
          "name":"debug_flags_712",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5704,
          "bitWidth":8,
          "name":"debug_flags_713",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5712,
          "bitWidth":8,
          "name":"debug_flags_714",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5720,
          "bitWidth":8,
          "name":"debug_flags_715",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5728,
          "bitWidth":8,
          "name":"debug_flags_716",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5736,
          "bitWidth":8,
          "name":"debug_flags_717",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5744,
          "bitWidth":8,
          "name":"debug_flags_718",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5752,
          "bitWidth":8,
          "name":"debug_flags_719",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5760,
          "bitWidth":8,
          "name":"debug_flags_720",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5768,
          "bitWidth":8,
          "name":"debug_flags_721",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5776,
          "bitWidth":8,
          "name":"debug_flags_722",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5784,
          "bitWidth":8,
          "name":"debug_flags_723",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5792,
          "bitWidth":8,
          "name":"debug_flags_724",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5800,
          "bitWidth":8,
          "name":"debug_flags_725",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5808,
          "bitWidth":8,
          "name":"debug_flags_726",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5816,
          "bitWidth":8,
          "name":"debug_flags_727",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5824,
          "bitWidth":8,
          "name":"debug_flags_728",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5832,
          "bitWidth":8,
          "name":"debug_flags_729",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5840,
          "bitWidth":8,
          "name":"debug_flags_730",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5848,
          "bitWidth":8,
          "name":"debug_flags_731",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5856,
          "bitWidth":8,
          "name":"debug_flags_732",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5864,
          "bitWidth":8,
          "name":"debug_flags_733",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5872,
          "bitWidth":8,
          "name":"debug_flags_734",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5880,
          "bitWidth":8,
          "name":"debug_flags_735",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5888,
          "bitWidth":8,
          "name":"debug_flags_736",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5896,
          "bitWidth":8,
          "name":"debug_flags_737",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5904,
          "bitWidth":8,
          "name":"debug_flags_738",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5912,
          "bitWidth":8,
          "name":"debug_flags_739",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5920,
          "bitWidth":8,
          "name":"debug_flags_740",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5928,
          "bitWidth":8,
          "name":"debug_flags_741",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5936,
          "bitWidth":8,
          "name":"debug_flags_742",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5944,
          "bitWidth":8,
          "name":"debug_flags_743",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5952,
          "bitWidth":8,
          "name":"debug_flags_744",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5960,
          "bitWidth":8,
          "name":"debug_flags_745",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5968,
          "bitWidth":8,
          "name":"debug_flags_746",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5976,
          "bitWidth":8,
          "name":"debug_flags_747",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5984,
          "bitWidth":8,
          "name":"debug_flags_748",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":5992,
          "bitWidth":8,
          "name":"debug_flags_749",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6000,
          "bitWidth":8,
          "name":"debug_flags_750",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6008,
          "bitWidth":8,
          "name":"debug_flags_751",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6016,
          "bitWidth":8,
          "name":"debug_flags_752",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6024,
          "bitWidth":8,
          "name":"debug_flags_753",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6032,
          "bitWidth":8,
          "name":"debug_flags_754",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6040,
          "bitWidth":8,
          "name":"debug_flags_755",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6048,
          "bitWidth":8,
          "name":"debug_flags_756",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6056,
          "bitWidth":8,
          "name":"debug_flags_757",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6064,
          "bitWidth":8,
          "name":"debug_flags_758",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6072,
          "bitWidth":8,
          "name":"debug_flags_759",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6080,
          "bitWidth":8,
          "name":"debug_flags_760",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6088,
          "bitWidth":8,
          "name":"debug_flags_761",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6096,
          "bitWidth":8,
          "name":"debug_flags_762",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6104,
          "bitWidth":8,
          "name":"debug_flags_763",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6112,
          "bitWidth":8,
          "name":"debug_flags_764",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6120,
          "bitWidth":8,
          "name":"debug_flags_765",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6128,
          "bitWidth":8,
          "name":"debug_flags_766",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6136,
          "bitWidth":8,
          "name":"debug_flags_767",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6144,
          "bitWidth":8,
          "name":"debug_flags_768",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6152,
          "bitWidth":8,
          "name":"debug_flags_769",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6160,
          "bitWidth":8,
          "name":"debug_flags_770",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6168,
          "bitWidth":8,
          "name":"debug_flags_771",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6176,
          "bitWidth":8,
          "name":"debug_flags_772",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6184,
          "bitWidth":8,
          "name":"debug_flags_773",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6192,
          "bitWidth":8,
          "name":"debug_flags_774",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6200,
          "bitWidth":8,
          "name":"debug_flags_775",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6208,
          "bitWidth":8,
          "name":"debug_flags_776",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6216,
          "bitWidth":8,
          "name":"debug_flags_777",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6224,
          "bitWidth":8,
          "name":"debug_flags_778",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6232,
          "bitWidth":8,
          "name":"debug_flags_779",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6240,
          "bitWidth":8,
          "name":"debug_flags_780",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6248,
          "bitWidth":8,
          "name":"debug_flags_781",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6256,
          "bitWidth":8,
          "name":"debug_flags_782",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6264,
          "bitWidth":8,
          "name":"debug_flags_783",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6272,
          "bitWidth":8,
          "name":"debug_flags_784",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6280,
          "bitWidth":8,
          "name":"debug_flags_785",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6288,
          "bitWidth":8,
          "name":"debug_flags_786",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6296,
          "bitWidth":8,
          "name":"debug_flags_787",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6304,
          "bitWidth":8,
          "name":"debug_flags_788",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6312,
          "bitWidth":8,
          "name":"debug_flags_789",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6320,
          "bitWidth":8,
          "name":"debug_flags_790",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6328,
          "bitWidth":8,
          "name":"debug_flags_791",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6336,
          "bitWidth":8,
          "name":"debug_flags_792",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6344,
          "bitWidth":8,
          "name":"debug_flags_793",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6352,
          "bitWidth":8,
          "name":"debug_flags_794",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6360,
          "bitWidth":8,
          "name":"debug_flags_795",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6368,
          "bitWidth":8,
          "name":"debug_flags_796",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6376,
          "bitWidth":8,
          "name":"debug_flags_797",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6384,
          "bitWidth":8,
          "name":"debug_flags_798",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6392,
          "bitWidth":8,
          "name":"debug_flags_799",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6400,
          "bitWidth":8,
          "name":"debug_flags_800",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6408,
          "bitWidth":8,
          "name":"debug_flags_801",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6416,
          "bitWidth":8,
          "name":"debug_flags_802",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6424,
          "bitWidth":8,
          "name":"debug_flags_803",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6432,
          "bitWidth":8,
          "name":"debug_flags_804",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6440,
          "bitWidth":8,
          "name":"debug_flags_805",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6448,
          "bitWidth":8,
          "name":"debug_flags_806",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6456,
          "bitWidth":8,
          "name":"debug_flags_807",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6464,
          "bitWidth":8,
          "name":"debug_flags_808",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6472,
          "bitWidth":8,
          "name":"debug_flags_809",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6480,
          "bitWidth":8,
          "name":"debug_flags_810",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6488,
          "bitWidth":8,
          "name":"debug_flags_811",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6496,
          "bitWidth":8,
          "name":"debug_flags_812",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6504,
          "bitWidth":8,
          "name":"debug_flags_813",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6512,
          "bitWidth":8,
          "name":"debug_flags_814",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6520,
          "bitWidth":8,
          "name":"debug_flags_815",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6528,
          "bitWidth":8,
          "name":"debug_flags_816",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6536,
          "bitWidth":8,
          "name":"debug_flags_817",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6544,
          "bitWidth":8,
          "name":"debug_flags_818",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6552,
          "bitWidth":8,
          "name":"debug_flags_819",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6560,
          "bitWidth":8,
          "name":"debug_flags_820",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6568,
          "bitWidth":8,
          "name":"debug_flags_821",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6576,
          "bitWidth":8,
          "name":"debug_flags_822",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6584,
          "bitWidth":8,
          "name":"debug_flags_823",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6592,
          "bitWidth":8,
          "name":"debug_flags_824",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6600,
          "bitWidth":8,
          "name":"debug_flags_825",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6608,
          "bitWidth":8,
          "name":"debug_flags_826",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6616,
          "bitWidth":8,
          "name":"debug_flags_827",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6624,
          "bitWidth":8,
          "name":"debug_flags_828",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6632,
          "bitWidth":8,
          "name":"debug_flags_829",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6640,
          "bitWidth":8,
          "name":"debug_flags_830",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6648,
          "bitWidth":8,
          "name":"debug_flags_831",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6656,
          "bitWidth":8,
          "name":"debug_flags_832",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6664,
          "bitWidth":8,
          "name":"debug_flags_833",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6672,
          "bitWidth":8,
          "name":"debug_flags_834",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6680,
          "bitWidth":8,
          "name":"debug_flags_835",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6688,
          "bitWidth":8,
          "name":"debug_flags_836",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6696,
          "bitWidth":8,
          "name":"debug_flags_837",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6704,
          "bitWidth":8,
          "name":"debug_flags_838",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6712,
          "bitWidth":8,
          "name":"debug_flags_839",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6720,
          "bitWidth":8,
          "name":"debug_flags_840",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6728,
          "bitWidth":8,
          "name":"debug_flags_841",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6736,
          "bitWidth":8,
          "name":"debug_flags_842",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6744,
          "bitWidth":8,
          "name":"debug_flags_843",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6752,
          "bitWidth":8,
          "name":"debug_flags_844",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6760,
          "bitWidth":8,
          "name":"debug_flags_845",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6768,
          "bitWidth":8,
          "name":"debug_flags_846",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6776,
          "bitWidth":8,
          "name":"debug_flags_847",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6784,
          "bitWidth":8,
          "name":"debug_flags_848",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6792,
          "bitWidth":8,
          "name":"debug_flags_849",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6800,
          "bitWidth":8,
          "name":"debug_flags_850",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6808,
          "bitWidth":8,
          "name":"debug_flags_851",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6816,
          "bitWidth":8,
          "name":"debug_flags_852",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6824,
          "bitWidth":8,
          "name":"debug_flags_853",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6832,
          "bitWidth":8,
          "name":"debug_flags_854",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6840,
          "bitWidth":8,
          "name":"debug_flags_855",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6848,
          "bitWidth":8,
          "name":"debug_flags_856",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6856,
          "bitWidth":8,
          "name":"debug_flags_857",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6864,
          "bitWidth":8,
          "name":"debug_flags_858",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6872,
          "bitWidth":8,
          "name":"debug_flags_859",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6880,
          "bitWidth":8,
          "name":"debug_flags_860",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6888,
          "bitWidth":8,
          "name":"debug_flags_861",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6896,
          "bitWidth":8,
          "name":"debug_flags_862",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6904,
          "bitWidth":8,
          "name":"debug_flags_863",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6912,
          "bitWidth":8,
          "name":"debug_flags_864",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6920,
          "bitWidth":8,
          "name":"debug_flags_865",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6928,
          "bitWidth":8,
          "name":"debug_flags_866",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6936,
          "bitWidth":8,
          "name":"debug_flags_867",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6944,
          "bitWidth":8,
          "name":"debug_flags_868",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6952,
          "bitWidth":8,
          "name":"debug_flags_869",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6960,
          "bitWidth":8,
          "name":"debug_flags_870",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6968,
          "bitWidth":8,
          "name":"debug_flags_871",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6976,
          "bitWidth":8,
          "name":"debug_flags_872",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6984,
          "bitWidth":8,
          "name":"debug_flags_873",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":6992,
          "bitWidth":8,
          "name":"debug_flags_874",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7000,
          "bitWidth":8,
          "name":"debug_flags_875",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7008,
          "bitWidth":8,
          "name":"debug_flags_876",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7016,
          "bitWidth":8,
          "name":"debug_flags_877",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7024,
          "bitWidth":8,
          "name":"debug_flags_878",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7032,
          "bitWidth":8,
          "name":"debug_flags_879",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7040,
          "bitWidth":8,
          "name":"debug_flags_880",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7048,
          "bitWidth":8,
          "name":"debug_flags_881",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7056,
          "bitWidth":8,
          "name":"debug_flags_882",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7064,
          "bitWidth":8,
          "name":"debug_flags_883",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7072,
          "bitWidth":8,
          "name":"debug_flags_884",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7080,
          "bitWidth":8,
          "name":"debug_flags_885",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7088,
          "bitWidth":8,
          "name":"debug_flags_886",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7096,
          "bitWidth":8,
          "name":"debug_flags_887",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7104,
          "bitWidth":8,
          "name":"debug_flags_888",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7112,
          "bitWidth":8,
          "name":"debug_flags_889",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7120,
          "bitWidth":8,
          "name":"debug_flags_890",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7128,
          "bitWidth":8,
          "name":"debug_flags_891",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7136,
          "bitWidth":8,
          "name":"debug_flags_892",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7144,
          "bitWidth":8,
          "name":"debug_flags_893",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7152,
          "bitWidth":8,
          "name":"debug_flags_894",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7160,
          "bitWidth":8,
          "name":"debug_flags_895",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7168,
          "bitWidth":8,
          "name":"debug_flags_896",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7176,
          "bitWidth":8,
          "name":"debug_flags_897",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7184,
          "bitWidth":8,
          "name":"debug_flags_898",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7192,
          "bitWidth":8,
          "name":"debug_flags_899",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7200,
          "bitWidth":8,
          "name":"debug_flags_900",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7208,
          "bitWidth":8,
          "name":"debug_flags_901",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7216,
          "bitWidth":8,
          "name":"debug_flags_902",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7224,
          "bitWidth":8,
          "name":"debug_flags_903",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7232,
          "bitWidth":8,
          "name":"debug_flags_904",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7240,
          "bitWidth":8,
          "name":"debug_flags_905",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7248,
          "bitWidth":8,
          "name":"debug_flags_906",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7256,
          "bitWidth":8,
          "name":"debug_flags_907",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7264,
          "bitWidth":8,
          "name":"debug_flags_908",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7272,
          "bitWidth":8,
          "name":"debug_flags_909",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7280,
          "bitWidth":8,
          "name":"debug_flags_910",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7288,
          "bitWidth":8,
          "name":"debug_flags_911",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7296,
          "bitWidth":8,
          "name":"debug_flags_912",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7304,
          "bitWidth":8,
          "name":"debug_flags_913",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7312,
          "bitWidth":8,
          "name":"debug_flags_914",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7320,
          "bitWidth":8,
          "name":"debug_flags_915",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7328,
          "bitWidth":8,
          "name":"debug_flags_916",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7336,
          "bitWidth":8,
          "name":"debug_flags_917",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7344,
          "bitWidth":8,
          "name":"debug_flags_918",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7352,
          "bitWidth":8,
          "name":"debug_flags_919",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7360,
          "bitWidth":8,
          "name":"debug_flags_920",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7368,
          "bitWidth":8,
          "name":"debug_flags_921",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7376,
          "bitWidth":8,
          "name":"debug_flags_922",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7384,
          "bitWidth":8,
          "name":"debug_flags_923",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7392,
          "bitWidth":8,
          "name":"debug_flags_924",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7400,
          "bitWidth":8,
          "name":"debug_flags_925",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7408,
          "bitWidth":8,
          "name":"debug_flags_926",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7416,
          "bitWidth":8,
          "name":"debug_flags_927",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7424,
          "bitWidth":8,
          "name":"debug_flags_928",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7432,
          "bitWidth":8,
          "name":"debug_flags_929",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7440,
          "bitWidth":8,
          "name":"debug_flags_930",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7448,
          "bitWidth":8,
          "name":"debug_flags_931",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7456,
          "bitWidth":8,
          "name":"debug_flags_932",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7464,
          "bitWidth":8,
          "name":"debug_flags_933",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7472,
          "bitWidth":8,
          "name":"debug_flags_934",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7480,
          "bitWidth":8,
          "name":"debug_flags_935",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7488,
          "bitWidth":8,
          "name":"debug_flags_936",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7496,
          "bitWidth":8,
          "name":"debug_flags_937",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7504,
          "bitWidth":8,
          "name":"debug_flags_938",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7512,
          "bitWidth":8,
          "name":"debug_flags_939",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7520,
          "bitWidth":8,
          "name":"debug_flags_940",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7528,
          "bitWidth":8,
          "name":"debug_flags_941",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7536,
          "bitWidth":8,
          "name":"debug_flags_942",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7544,
          "bitWidth":8,
          "name":"debug_flags_943",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7552,
          "bitWidth":8,
          "name":"debug_flags_944",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7560,
          "bitWidth":8,
          "name":"debug_flags_945",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7568,
          "bitWidth":8,
          "name":"debug_flags_946",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7576,
          "bitWidth":8,
          "name":"debug_flags_947",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7584,
          "bitWidth":8,
          "name":"debug_flags_948",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7592,
          "bitWidth":8,
          "name":"debug_flags_949",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7600,
          "bitWidth":8,
          "name":"debug_flags_950",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7608,
          "bitWidth":8,
          "name":"debug_flags_951",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7616,
          "bitWidth":8,
          "name":"debug_flags_952",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7624,
          "bitWidth":8,
          "name":"debug_flags_953",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7632,
          "bitWidth":8,
          "name":"debug_flags_954",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7640,
          "bitWidth":8,
          "name":"debug_flags_955",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7648,
          "bitWidth":8,
          "name":"debug_flags_956",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7656,
          "bitWidth":8,
          "name":"debug_flags_957",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7664,
          "bitWidth":8,
          "name":"debug_flags_958",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7672,
          "bitWidth":8,
          "name":"debug_flags_959",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7680,
          "bitWidth":8,
          "name":"debug_flags_960",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7688,
          "bitWidth":8,
          "name":"debug_flags_961",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7696,
          "bitWidth":8,
          "name":"debug_flags_962",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7704,
          "bitWidth":8,
          "name":"debug_flags_963",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7712,
          "bitWidth":8,
          "name":"debug_flags_964",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7720,
          "bitWidth":8,
          "name":"debug_flags_965",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7728,
          "bitWidth":8,
          "name":"debug_flags_966",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7736,
          "bitWidth":8,
          "name":"debug_flags_967",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7744,
          "bitWidth":8,
          "name":"debug_flags_968",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7752,
          "bitWidth":8,
          "name":"debug_flags_969",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7760,
          "bitWidth":8,
          "name":"debug_flags_970",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7768,
          "bitWidth":8,
          "name":"debug_flags_971",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7776,
          "bitWidth":8,
          "name":"debug_flags_972",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7784,
          "bitWidth":8,
          "name":"debug_flags_973",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7792,
          "bitWidth":8,
          "name":"debug_flags_974",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7800,
          "bitWidth":8,
          "name":"debug_flags_975",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7808,
          "bitWidth":8,
          "name":"debug_flags_976",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7816,
          "bitWidth":8,
          "name":"debug_flags_977",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7824,
          "bitWidth":8,
          "name":"debug_flags_978",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7832,
          "bitWidth":8,
          "name":"debug_flags_979",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7840,
          "bitWidth":8,
          "name":"debug_flags_980",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7848,
          "bitWidth":8,
          "name":"debug_flags_981",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7856,
          "bitWidth":8,
          "name":"debug_flags_982",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7864,
          "bitWidth":8,
          "name":"debug_flags_983",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7872,
          "bitWidth":8,
          "name":"debug_flags_984",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7880,
          "bitWidth":8,
          "name":"debug_flags_985",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7888,
          "bitWidth":8,
          "name":"debug_flags_986",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7896,
          "bitWidth":8,
          "name":"debug_flags_987",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7904,
          "bitWidth":8,
          "name":"debug_flags_988",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7912,
          "bitWidth":8,
          "name":"debug_flags_989",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7920,
          "bitWidth":8,
          "name":"debug_flags_990",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7928,
          "bitWidth":8,
          "name":"debug_flags_991",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7936,
          "bitWidth":8,
          "name":"debug_flags_992",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7944,
          "bitWidth":8,
          "name":"debug_flags_993",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7952,
          "bitWidth":8,
          "name":"debug_flags_994",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7960,
          "bitWidth":8,
          "name":"debug_flags_995",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7968,
          "bitWidth":8,
          "name":"debug_flags_996",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7976,
          "bitWidth":8,
          "name":"debug_flags_997",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7984,
          "bitWidth":8,
          "name":"debug_flags_998",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":7992,
          "bitWidth":8,
          "name":"debug_flags_999",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8000,
          "bitWidth":8,
          "name":"debug_flags_1000",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8008,
          "bitWidth":8,
          "name":"debug_flags_1001",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8016,
          "bitWidth":8,
          "name":"debug_flags_1002",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8024,
          "bitWidth":8,
          "name":"debug_flags_1003",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8032,
          "bitWidth":8,
          "name":"debug_flags_1004",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8040,
          "bitWidth":8,
          "name":"debug_flags_1005",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8048,
          "bitWidth":8,
          "name":"debug_flags_1006",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8056,
          "bitWidth":8,
          "name":"debug_flags_1007",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8064,
          "bitWidth":8,
          "name":"debug_flags_1008",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8072,
          "bitWidth":8,
          "name":"debug_flags_1009",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8080,
          "bitWidth":8,
          "name":"debug_flags_1010",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8088,
          "bitWidth":8,
          "name":"debug_flags_1011",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8096,
          "bitWidth":8,
          "name":"debug_flags_1012",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8104,
          "bitWidth":8,
          "name":"debug_flags_1013",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8112,
          "bitWidth":8,
          "name":"debug_flags_1014",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8120,
          "bitWidth":8,
          "name":"debug_flags_1015",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8128,
          "bitWidth":8,
          "name":"debug_flags_1016",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8136,
          "bitWidth":8,
          "name":"debug_flags_1017",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8144,
          "bitWidth":8,
          "name":"debug_flags_1018",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8152,
          "bitWidth":8,
          "name":"debug_flags_1019",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8160,
          "bitWidth":8,
          "name":"debug_flags_1020",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8168,
          "bitWidth":8,
          "name":"debug_flags_1021",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8176,
          "bitWidth":8,
          "name":"debug_flags_1022",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":8184,
          "bitWidth":8,
          "name":"debug_flags_1023",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_flags",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":0,
          "bitWidth":8,
          "name":"debug_rom_0",
          "resetValue":111,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"Debug ROM",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":8,
          "bitWidth":8,
          "name":"debug_rom_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":16,
          "bitWidth":8,
          "name":"debug_rom_2",
          "resetValue":-64,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":24,
          "bitWidth":8,
          "name":"debug_rom_3",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":32,
          "bitWidth":8,
          "name":"debug_rom_4",
          "resetValue":111,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":40,
          "bitWidth":8,
          "name":"debug_rom_5",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":48,
          "bitWidth":8,
          "name":"debug_rom_6",
          "resetValue":-128,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":56,
          "bitWidth":8,
          "name":"debug_rom_7",
          "resetValue":3,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":64,
          "bitWidth":8,
          "name":"debug_rom_8",
          "resetValue":111,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":72,
          "bitWidth":8,
          "name":"debug_rom_9",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":80,
          "bitWidth":8,
          "name":"debug_rom_10",
          "resetValue":64,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":88,
          "bitWidth":8,
          "name":"debug_rom_11",
          "resetValue":4,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":96,
          "bitWidth":8,
          "name":"debug_rom_12",
          "resetValue":15,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":104,
          "bitWidth":8,
          "name":"debug_rom_13",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":112,
          "bitWidth":8,
          "name":"debug_rom_14",
          "resetValue":-16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":120,
          "bitWidth":8,
          "name":"debug_rom_15",
          "resetValue":15,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":128,
          "bitWidth":8,
          "name":"debug_rom_16",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":136,
          "bitWidth":8,
          "name":"debug_rom_17",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":144,
          "bitWidth":8,
          "name":"debug_rom_18",
          "resetValue":36,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":152,
          "bitWidth":8,
          "name":"debug_rom_19",
          "resetValue":123,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":160,
          "bitWidth":8,
          "name":"debug_rom_20",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":168,
          "bitWidth":8,
          "name":"debug_rom_21",
          "resetValue":36,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":176,
          "bitWidth":8,
          "name":"debug_rom_22",
          "resetValue":64,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":184,
          "bitWidth":8,
          "name":"debug_rom_23",
          "resetValue":-15,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":192,
          "bitWidth":8,
          "name":"debug_rom_24",
          "resetValue":35,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":200,
          "bitWidth":8,
          "name":"debug_rom_25",
          "resetValue":32,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":208,
          "bitWidth":8,
          "name":"debug_rom_26",
          "resetValue":-128,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":216,
          "bitWidth":8,
          "name":"debug_rom_27",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":224,
          "bitWidth":8,
          "name":"debug_rom_28",
          "resetValue":3,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":232,
          "bitWidth":8,
          "name":"debug_rom_29",
          "resetValue":68,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":240,
          "bitWidth":8,
          "name":"debug_rom_30",
          "resetValue":4,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":248,
          "bitWidth":8,
          "name":"debug_rom_31",
          "resetValue":64,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":256,
          "bitWidth":8,
          "name":"debug_rom_32",
          "resetValue":19,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":264,
          "bitWidth":8,
          "name":"debug_rom_33",
          "resetValue":116,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":272,
          "bitWidth":8,
          "name":"debug_rom_34",
          "resetValue":52,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":280,
          "bitWidth":8,
          "name":"debug_rom_35",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":288,
          "bitWidth":8,
          "name":"debug_rom_36",
          "resetValue":-29,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":296,
          "bitWidth":8,
          "name":"debug_rom_37",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":304,
          "bitWidth":8,
          "name":"debug_rom_38",
          "resetValue":4,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":312,
          "bitWidth":8,
          "name":"debug_rom_39",
          "resetValue":-2,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":320,
          "bitWidth":8,
          "name":"debug_rom_40",
          "resetValue":19,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":328,
          "bitWidth":8,
          "name":"debug_rom_41",
          "resetValue":116,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":336,
          "bitWidth":8,
          "name":"debug_rom_42",
          "resetValue":20,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":344,
          "bitWidth":8,
          "name":"debug_rom_43",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":352,
          "bitWidth":8,
          "name":"debug_rom_44",
          "resetValue":99,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":360,
          "bitWidth":8,
          "name":"debug_rom_45",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":368,
          "bitWidth":8,
          "name":"debug_rom_46",
          "resetValue":4,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":376,
          "bitWidth":8,
          "name":"debug_rom_47",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":384,
          "bitWidth":8,
          "name":"debug_rom_48",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":392,
          "bitWidth":8,
          "name":"debug_rom_49",
          "resetValue":36,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":400,
          "bitWidth":8,
          "name":"debug_rom_50",
          "resetValue":32,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":408,
          "bitWidth":8,
          "name":"debug_rom_51",
          "resetValue":123,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":416,
          "bitWidth":8,
          "name":"debug_rom_52",
          "resetValue":35,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":424,
          "bitWidth":8,
          "name":"debug_rom_53",
          "resetValue":34,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":432,
          "bitWidth":8,
          "name":"debug_rom_54",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":440,
          "bitWidth":8,
          "name":"debug_rom_55",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":448,
          "bitWidth":8,
          "name":"debug_rom_56",
          "resetValue":103,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":456,
          "bitWidth":8,
          "name":"debug_rom_57",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":464,
          "bitWidth":8,
          "name":"debug_rom_58",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":472,
          "bitWidth":8,
          "name":"debug_rom_59",
          "resetValue":48,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":480,
          "bitWidth":8,
          "name":"debug_rom_60",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":488,
          "bitWidth":8,
          "name":"debug_rom_61",
          "resetValue":36,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":496,
          "bitWidth":8,
          "name":"debug_rom_62",
          "resetValue":64,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":504,
          "bitWidth":8,
          "name":"debug_rom_63",
          "resetValue":-15,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":512,
          "bitWidth":8,
          "name":"debug_rom_64",
          "resetValue":35,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":520,
          "bitWidth":8,
          "name":"debug_rom_65",
          "resetValue":36,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":528,
          "bitWidth":8,
          "name":"debug_rom_66",
          "resetValue":-128,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":536,
          "bitWidth":8,
          "name":"debug_rom_67",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":544,
          "bitWidth":8,
          "name":"debug_rom_68",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":552,
          "bitWidth":8,
          "name":"debug_rom_69",
          "resetValue":36,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":560,
          "bitWidth":8,
          "name":"debug_rom_70",
          "resetValue":32,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":568,
          "bitWidth":8,
          "name":"debug_rom_71",
          "resetValue":123,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":576,
          "bitWidth":8,
          "name":"debug_rom_72",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":584,
          "bitWidth":8,
          "name":"debug_rom_73",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":592,
          "bitWidth":8,
          "name":"debug_rom_74",
          "resetValue":32,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":600,
          "bitWidth":8,
          "name":"debug_rom_75",
          "resetValue":123,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":608,
          "bitWidth":8,
          "name":"debug_rom_76",
          "resetValue":35,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":616,
          "bitWidth":8,
          "name":"debug_rom_77",
          "resetValue":38,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":624,
          "bitWidth":8,
          "name":"debug_rom_78",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":632,
          "bitWidth":8,
          "name":"debug_rom_79",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":640,
          "bitWidth":8,
          "name":"debug_rom_80",
          "resetValue":115,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":648,
          "bitWidth":8,
          "name":"debug_rom_81",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":656,
          "bitWidth":8,
          "name":"debug_rom_82",
          "resetValue":16,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":664,
          "bitWidth":8,
          "name":"debug_rom_83",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"debug_rom",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~TestHarness|BundleBridgeNexus_16>outputs_0"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.BundleBridgeNexus_17"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_114",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_115",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_116",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_117",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_118",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_119",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.TLBuffer_22"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_120",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_121",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_122",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TLUART",
    "regMappingSer":{
      "displayName":"TLUART",
      "deviceName":"TLUART",
      "baseAddress":1409286144,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit enable",
          "group":"txctrl",
          "groupDesc":"Serial transmit control",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":1,
          "bitWidth":1,
          "name":"nstop",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of stop bits",
          "group":"txctrl",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"rxen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive enable",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xa",
          "bitOffset":0,
          "bitWidth":9,
          "name":"txcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xe",
          "bitOffset":0,
          "bitWidth":9,
          "name":"rxcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"Serial interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"Serial interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":16,
          "name":"div",
          "resetValue":868,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Baud rate divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_123",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_124",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TileClockGater",
    "regMappingSer":{
      "displayName":"TileClockGater",
      "deviceName":"TileClockGater",
      "baseAddress":1048576,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField4_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField8_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegFieldc_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField10_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField14_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField18_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_125",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_126",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"TestHarness.TileResetSetter",
    "regMappingSer":{
      "displayName":"TileResetSetter",
      "deviceName":"TileResetSetter",
      "baseAddress":1114112,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"TestHarness.ClockGroup_6"
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"TestHarness.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":0,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "debug-controller@0"
        ]
      },
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":16384,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "boot-address-reg@4000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":131072,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":true,
          "a":false
        },
        "names":[
          "lbwif-rom@20000"
        ]
      },
      {
        "range":{
          "base":1048576,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clock-gater@100000"
        ]
      },
      {
        "range":{
          "base":1114112,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "tile-reset-setter@110000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":268435456,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "lbwif-ram@10000000"
        ]
      },
      {
        "range":{
          "base":1409286144,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@54000000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":268435456
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"TestHarness.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":0,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "debug-controller@0"
        ]
      },
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":16384,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "boot-address-reg@4000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":131072,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":true,
          "a":false
        },
        "names":[
          "lbwif-rom@20000"
        ]
      },
      {
        "range":{
          "base":1048576,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clock-gater@100000"
        ]
      },
      {
        "range":{
          "base":1114112,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "tile-reset-setter@110000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":268435456,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "lbwif-ram@10000000"
        ]
      },
      {
        "range":{
          "base":1409286144,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@54000000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":268435456
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.ClockDividerN",
    "name":"ClockDividerN.sv",
    "text":"// See LICENSE for license details.\n\n/**\n  * An unsynthesizable divide-by-N clock divider.\n  * Duty cycle is 100 * (ceil(DIV / 2)) / DIV.\n  */\n\nmodule ClockDividerN #(parameter DIV = 1)(output logic clk_out = 1'b0, input clk_in);\n\n    localparam CWIDTH = $clog2(DIV);\n    localparam LOW_CYCLES = DIV / 2;\n    localparam HIGH_TRANSITION = LOW_CYCLES - 1;\n    localparam LOW_TRANSITION = DIV - 1;\n\n    generate\n        if (DIV == 1) begin\n            // This needs to be procedural because of the assignment on declaration\n            always @(clk_in) begin\n                clk_out = clk_in;\n            end\n        end else begin\n            reg [CWIDTH - 1: 0] count = HIGH_TRANSITION[CWIDTH-1:0];\n            // The blocking assignment to clock out is used to conform what was done\n            // in RC's clock dividers.\n            // It should have the effect of preventing registers in the divided clock\n            // domain latching register updates launched by the fast clock-domain edge\n            // that occurs at the same simulated time (as the divided clock edge).\n            always @(posedge clk_in) begin\n                if (count == LOW_TRANSITION[CWIDTH-1:0]) begin\n                    clk_out = 1'b0;\n                    count <= '0;\n                end\n                else begin\n                    if (count == HIGH_TRANSITION[CWIDTH-1:0]) begin\n                        clk_out = 1'b1;\n                    end\n                    count <= count + 1'b1;\n                end\n            end\n        end\n    endgenerate\nendmodule // ClockDividerN\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_1",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_2",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_1",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_2",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_3",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_4",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_5",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_6",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_7",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_8",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_9",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_10",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_11",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_12",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_13",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_14",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_15",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_16",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_17",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_18",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_19",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_20",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_21",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_22",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_23",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_24",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_25",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_26",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_27",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_28",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_29",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_30",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_31",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_32",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_33",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_3",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_4",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_5",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_6",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_7",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_8",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_9",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_10",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_11",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_12",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_13",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_14",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_15",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_16",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_17",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_18",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_19",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_20",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_21",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_22",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_23",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_24",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_25",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_26",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_27",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_28",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_29",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_30",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_31",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_32",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_33",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_34",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_35",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_36",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_34",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_35",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_37",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_38",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_39",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalInIOCell_40",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.GenericDigitalOutIOCell_36",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimJTAG",
    "name":"SimJTAG.v",
    "text":"// See LICENSE.SiFive for license details.\n//VCS coverage exclude_file\nimport \"DPI-C\" function int jtag_tick\n(\n output bit jtag_TCK,\n output bit jtag_TMS,\n output bit jtag_TDI,\n output bit jtag_TRSTn,\n \n input bit  jtag_TDO\n);\n\nmodule SimJTAG #(\n                 parameter TICK_DELAY = 50\n                 )(\n\n                   input         clock,\n                   input         reset,\n                   \n                   input         enable,\n                   input         init_done,\n\n                   output        jtag_TCK,\n                   output        jtag_TMS,\n                   output        jtag_TDI,\n                   output        jtag_TRSTn,\n \n                   input         jtag_TDO_data,\n                   input         jtag_TDO_driven,\n                          \n                   output [31:0] exit\n                   );\n\n   reg [31:0]                    tickCounterReg;\n   wire [31:0]                   tickCounterNxt;\n   \n   assign tickCounterNxt = (tickCounterReg == 0) ? TICK_DELAY :  (tickCounterReg - 1);\n   \n   bit          r_reset;\n\n   wire [31:0]  random_bits = $random;\n   \n   wire         #0.1 __jtag_TDO = jtag_TDO_driven ? \n                jtag_TDO_data : random_bits[0];\n      \n   bit          __jtag_TCK;\n   bit          __jtag_TMS;\n   bit          __jtag_TDI;\n   bit          __jtag_TRSTn;\n   int          __exit;\n\n   reg          init_done_sticky;\n   \n   assign #0.1 jtag_TCK   = __jtag_TCK;\n   assign #0.1 jtag_TMS   = __jtag_TMS;\n   assign #0.1 jtag_TDI   = __jtag_TDI;\n   assign #0.1 jtag_TRSTn = __jtag_TRSTn;\n   \n   assign #0.1 exit = __exit;\n\n   always @(posedge clock) begin\n      r_reset <= reset;\n      if (reset || r_reset) begin\n         __exit = 0;\n         tickCounterReg <= TICK_DELAY;\n         init_done_sticky <= 1'b0;\n         __jtag_TCK = !__jtag_TCK;\n      end else begin\n         init_done_sticky <= init_done | init_done_sticky;\n         if (enable && init_done_sticky) begin\n            tickCounterReg <= tickCounterNxt;\n            if (tickCounterReg == 0) begin\n               __exit = jtag_tick(\n                                  __jtag_TCK,\n                                  __jtag_TMS,\n                                  __jtag_TDI,\n                                  __jtag_TRSTn,\n                                  __jtag_TDO);\n            end\n         end // if (enable && init_done_sticky)\n      end // else: !if(reset || r_reset)\n   end // always @ (posedge clock)\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimJTAG",
    "name":"SimJTAG.cc",
    "text":"// See LICENSE.SiFive for license details.\n\n#include <cstdlib>\n#include \"remote_bitbang.h\"\n\nremote_bitbang_t* jtag;\nextern \"C\" int jtag_tick\n(\n unsigned char * jtag_TCK,\n unsigned char * jtag_TMS,\n unsigned char * jtag_TDI,\n unsigned char * jtag_TRSTn,\n unsigned char jtag_TDO\n)\n{\n  if (!jtag) {\n    // TODO: Pass in real port number\n    jtag = new remote_bitbang_t(0);\n  }\n\n  jtag->tick(jtag_TCK, jtag_TMS, jtag_TDI, jtag_TRSTn, jtag_TDO);\n\n  return jtag->done() ? (jtag->exit_code() << 1 | 1) : 0;\n\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimJTAG",
    "name":"remote_bitbang.h",
    "text":"// See LICENSE.Berkeley for license details.\n\n#ifndef REMOTE_BITBANG_H\n#define REMOTE_BITBANG_H\n\n#include <stdint.h>\n#include <sys/types.h>\n\nclass remote_bitbang_t\n{\npublic:\n  // Create a new server, listening for connections from localhost on the given\n  // port.\n  remote_bitbang_t(uint16_t port);\n\n  // Do a bit of work.\n  void tick(unsigned char * jtag_tck,\n            unsigned char * jtag_tms,\n            unsigned char * jtag_tdi,\n            unsigned char * jtag_trstn,\n            unsigned char jtag_tdo);\n\n  unsigned char done() {return quit;}\n  \n  int exit_code() {return err;}\n  \n private:\n\n  int err;\n  \n  unsigned char tck;\n  unsigned char tms;\n  unsigned char tdi;\n  unsigned char trstn;\n  unsigned char tdo;\n  unsigned char quit;\n    \n  int socket_fd;\n  int client_fd;\n\n  static const ssize_t buf_size = 64 * 1024;\n  char recv_buf[buf_size];\n  ssize_t recv_start, recv_end;\n\n  // Check for a client connecting, and accept if there is one.\n  void accept();\n  // Execute any commands the client has for us.\n  // But we only execute 1 because we need time for the\n  // simulation to run.\n  void execute_command();\n\n  // Reset. Currently does nothing.\n  void reset();\n\n  void set_pins(char _tck, char _tms, char _tdi);\n\n};\n\n#endif\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimJTAG",
    "name":"remote_bitbang.cc",
    "text":"// See LICENSE.Berkeley for license details.\n\n#include <arpa/inet.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n\n#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n\n#include \"remote_bitbang.h\"\n\n/////////// remote_bitbang_t\n\nremote_bitbang_t::remote_bitbang_t(uint16_t port) :\n  socket_fd(0),\n  client_fd(0),\n  recv_start(0),\n  recv_end(0),\n  err(0)\n{\n  socket_fd = socket(AF_INET, SOCK_STREAM, 0);\n  if (socket_fd == -1) {\n    fprintf(stderr, \"remote_bitbang failed to make socket: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  fcntl(socket_fd, F_SETFL, O_NONBLOCK);\n  int reuseaddr = 1;\n  if (setsockopt(socket_fd, SOL_SOCKET, SO_REUSEADDR, &reuseaddr,\n                 sizeof(int)) == -1) {\n    fprintf(stderr, \"remote_bitbang failed setsockopt: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  struct sockaddr_in addr;\n  memset(&addr, 0, sizeof(addr));\n  addr.sin_family = AF_INET;\n  addr.sin_addr.s_addr = INADDR_ANY;\n  addr.sin_port = htons(port);\n\n  if (::bind(socket_fd, (struct sockaddr *) &addr, sizeof(addr)) == -1) {\n    fprintf(stderr, \"remote_bitbang failed to bind socket: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  if (listen(socket_fd, 1) == -1) {\n    fprintf(stderr, \"remote_bitbang failed to listen on socket: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  socklen_t addrlen = sizeof(addr);\n  if (getsockname(socket_fd, (struct sockaddr *) &addr, &addrlen) == -1) {\n    fprintf(stderr, \"remote_bitbang getsockname failed: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  tck = 1;\n  tms = 1;\n  tdi = 1;\n  trstn = 1;\n  quit = 0;\n\n  fprintf(stderr, \"This emulator compiled with JTAG Remote Bitbang client. To enable, use +jtag_rbb_enable=1.\\n\");\n  fprintf(stderr, \"Listening on port %d\\n\",\n         ntohs(addr.sin_port));\n}\n\nvoid remote_bitbang_t::accept()\n{\n\n  fprintf(stderr,\"Attempting to accept client socket\\n\");\n  int again = 1;\n  while (again != 0) {\n    client_fd = ::accept(socket_fd, NULL, NULL);\n    if (client_fd == -1) {\n      if (errno == EAGAIN) {\n        // No client waiting to connect right now.\n      } else {\n        fprintf(stderr, \"failed to accept on socket: %s (%d)\\n\", strerror(errno),\n                errno);\n        again = 0;\n        abort();\n      }\n    } else {\n      fcntl(client_fd, F_SETFL, O_NONBLOCK);\n      fprintf(stderr, \"Accepted successfully.\");\n      again = 0;\n    }\n  }\n}\n\nvoid remote_bitbang_t::tick(\n                            unsigned char * jtag_tck,\n                            unsigned char * jtag_tms,\n                            unsigned char * jtag_tdi,\n                            unsigned char * jtag_trstn,\n                            unsigned char jtag_tdo\n                            )\n{\n  if (client_fd > 0) {\n    tdo = jtag_tdo;\n    execute_command();\n  } else {\n    this->accept();\n  }\n\n  * jtag_tck = tck;\n  * jtag_tms = tms;\n  * jtag_tdi = tdi;\n  * jtag_trstn = trstn;\n\n}\n\nvoid remote_bitbang_t::reset(){\n  //trstn = 0;\n}\n\nvoid remote_bitbang_t::set_pins(char _tck, char _tms, char _tdi){\n  tck = _tck;\n  tms = _tms;\n  tdi = _tdi;\n}\n\nvoid remote_bitbang_t::execute_command()\n{\n  char command;\n  int again = 1;\n  while (again) {\n    ssize_t num_read = read(client_fd, &command, sizeof(command));\n    if (num_read == -1) {\n      if (errno == EAGAIN) {\n        // We'll try again the next call.\n        //fprintf(stderr, \"Received no command. Will try again on the next call\\n\");\n      } else {\n        fprintf(stderr, \"remote_bitbang failed to read on socket: %s (%d)\\n\",\n                strerror(errno), errno);\n        again = 0;\n        abort();\n      }\n    } else if (num_read == 0) {\n      fprintf(stderr, \"No Command Received.\\n\");\n      again = 1;\n    } else {\n      again = 0;\n    }\n  }\n\n  //fprintf(stderr, \"Received a command %c\\n\", command);\n\n  int dosend = 0;\n\n  char tosend = '?';\n\n  switch (command) {\n  case 'B': /* fprintf(stderr, \"*BLINK*\\n\"); */ break;\n  case 'b': /* fprintf(stderr, \"_______\\n\"); */ break;\n  case 'r': reset(); break; // This is wrong. 'r' has other bits that indicated TRST and SRST.\n  case '0': set_pins(0, 0, 0); break;\n  case '1': set_pins(0, 0, 1); break;\n  case '2': set_pins(0, 1, 0); break;\n  case '3': set_pins(0, 1, 1); break;\n  case '4': set_pins(1, 0, 0); break;\n  case '5': set_pins(1, 0, 1); break;\n  case '6': set_pins(1, 1, 0); break;\n  case '7': set_pins(1, 1, 1); break;\n  case 'R': dosend = 1; tosend = tdo ? '1' : '0'; break;\n  case 'Q': quit = 1; break;\n  default:\n    fprintf(stderr, \"remote_bitbang got unsupported command '%c'\\n\",\n            command);\n  }\n\n  if (dosend){\n    while (1) {\n      ssize_t bytes = write(client_fd, &tosend, sizeof(tosend));\n      if (bytes == -1) {\n        fprintf(stderr, \"failed to write to socket: %s (%d)\\n\", strerror(errno), errno);\n        abort();\n      }\n      if (bytes > 0) {\n        break;\n      }\n    }\n  }\n\n  if (quit) {\n    // The remote disconnected.\n    fprintf(stderr, \"Remote end disconnected\\n\");\n    close(client_fd);\n    client_fd = 0;\n  }\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_127",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_128",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_129",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_130",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_131",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"TestHarness.TLRAM.mem",
    "address_width":9,
    "name":"mem",
    "data_width":64,
    "depth":512,
    "description":"mem",
    "write_mask_granularity":8
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_132",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_133",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_134",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_135",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_136",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_137",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_138",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_139",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_140",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_141",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_142",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_143",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimSerial",
    "name":"SimSerial.v",
    "text":"import \"DPI-C\" function int serial_tick\n(\n    input  bit     serial_out_valid,\n    output bit     serial_out_ready,\n    input  int     serial_out_bits,\n\n    output bit     serial_in_valid,\n    input  bit     serial_in_ready,\n    output int     serial_in_bits\n);\n\nmodule SimSerial (\n    input         clock,\n    input         reset,\n    input         serial_out_valid,\n    output        serial_out_ready,\n    input  [31:0] serial_out_bits,\n\n    output        serial_in_valid,\n    input         serial_in_ready,\n    output [31:0] serial_in_bits,\n\n    output        exit\n);\n\n    bit __in_valid;\n    bit __out_ready;\n    int __in_bits;\n    int __exit;\n\n    reg __in_valid_reg;\n    reg __out_ready_reg;\n    reg [31:0] __in_bits_reg;\n    reg __exit_reg;\n\n    assign serial_in_valid  = __in_valid_reg;\n    assign serial_in_bits   = __in_bits_reg;\n    assign serial_out_ready = __out_ready_reg;\n    assign exit = __exit_reg;\n\n    // Evaluate the signals on the positive edge\n    always @(posedge clock) begin\n        if (reset) begin\n            __in_valid = 0;\n            __out_ready = 0;\n            __exit = 0;\n\n            __in_valid_reg <= 0;\n            __in_bits_reg <= 0;\n            __out_ready_reg <= 0;\n            __exit_reg <= 0;\n        end else begin\n            __exit = serial_tick(\n                serial_out_valid,\n                __out_ready,\n                serial_out_bits,\n                __in_valid,\n                serial_in_ready,\n                __in_bits\n            );\n\n            __out_ready_reg <= __out_ready;\n            __in_valid_reg  <= __in_valid;\n            __in_bits_reg   <= __in_bits;\n            __exit_reg <= __exit[0];\n        end\n    end\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimSerial",
    "name":"SimSerial.cc",
    "text":"#include <vpi_user.h>\n#include <svdpi.h>\n#include <vector>\n#include <string>\n#include \"testchip_tsi.h\"\n\ntestchip_tsi_t *tsi = NULL;\n\n// Remove VCS simv option from argv if it match pattern -X???=\nvoid remove_vcs_simv_opt(int & argc, char **& argv){\n    int idx = 0;\n    while(idx < argc){\n        std::string str = std::string(argv[idx]);\n        if(str.length() > 1 && str[0] == '-' && str[1] != '-' && str.find('=') != std::string::npos){\n            // Found -????=???? as VCS simv option\n            for(int i = idx; i < argc - 1; i++){\n                // Remove the current option\n                argv[i] = argv[i + 1];\n            }\n            argc--;\n        }else{\n            idx++;\n        }\n    }\n}\n\nextern \"C\" int serial_tick(\n        unsigned char out_valid,\n        unsigned char *out_ready,\n        int out_bits,\n\n        unsigned char *in_valid,\n        unsigned char in_ready,\n        int *in_bits)\n{\n    bool out_fire = *out_ready && out_valid;\n    bool in_fire = *in_valid && in_ready;\n    bool in_free = !(*in_valid);\n\n    if (!tsi) {\n        s_vpi_vlog_info info;\n        if (!vpi_get_vlog_info(&info))\n          abort();\n\n\t  // Prevent simv option enter htif\n\t  remove_vcs_simv_opt(info.argc, info.argv);\n\n        // TODO: We should somehow inspect whether or not our backing memory supports loadmem, instead of unconditionally setting it to true\n        tsi = new testchip_tsi_t(info.argc, info.argv, true);\n    }\n\n    tsi->tick(out_valid, out_bits, in_ready);\n    tsi->switch_to_host();\n\n    *in_valid = tsi->in_valid();\n    *in_bits = tsi->in_bits();\n    *out_ready = tsi->out_ready();\n\n    return tsi->done() ? (tsi->exit_code() << 1 | 1) : 0;\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimSerial",
    "name":"testchip_tsi.cc",
    "text":"#include \"testchip_tsi.h\"\n#include <stdexcept>\n\ntestchip_tsi_t::testchip_tsi_t(int argc, char** argv, bool can_have_loadmem) : tsi_t(argc, argv)\n{\n  has_loadmem = false;\n  init_writes = std::vector<std::pair<uint64_t, uint32_t>>();\n  write_hart0_msip = true;\n\n  std::vector<std::string> args(argv + 1, argv + argc);\n  for (auto& arg : args) {\n    if (arg.find(\"+loadmem=\") == 0)\n      has_loadmem = can_have_loadmem;\n    if (arg.find(\"+init_write=0x\") == 0) {\n      auto d = arg.find(\":0x\");\n      if (d == std::string::npos) {\n        throw std::invalid_argument(\"Improperly formatted +init_write argument\");\n      }\n      uint64_t addr = strtoull(arg.substr(14, d - 14).c_str(), 0, 16);\n      uint32_t val = strtoull(arg.substr(d + 3).c_str(), 0, 16);\n\n      init_writes.push_back(std::make_pair(addr, val));\n    }\n    if (arg.find(\"+no_hart0_msip\") == 0)\n      write_hart0_msip = false;\n  }\n}\n\n\nvoid testchip_tsi_t::write_chunk(addr_t taddr, size_t nbytes, const void* src)\n{\n  if (is_loadmem) {\n    load_mem_write(taddr, nbytes, src);\n  } else {\n    tsi_t::write_chunk(taddr, nbytes, src);\n  }\n}\n\nvoid testchip_tsi_t::read_chunk(addr_t taddr, size_t nbytes, void* dst)\n{\n  if (is_loadmem) {\n    load_mem_read(taddr, nbytes, dst);\n  } else {\n    tsi_t::read_chunk(taddr, nbytes, dst);\n  }\n}\n\nvoid testchip_tsi_t::reset()\n{\n  for (auto p : init_writes) {\n    write_chunk(p.first, sizeof(uint32_t), &p.second);\n  }\n  if (write_hart0_msip)\n    tsi_t::reset();\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimSerial",
    "name":"testchip_tsi.h",
    "text":"#ifndef __TESTCHIP_TSI_H\n#define __TESTCHIP_TSI_H\n\n#include <stdexcept>\n\n#include <fesvr/tsi.h>\n#include <fesvr/htif.h>\n\nclass testchip_tsi_t : public tsi_t\n{\n public:\n  testchip_tsi_t(int argc, char** argv, bool has_loadmem);\n  virtual ~testchip_tsi_t() {};\n\n  void write_chunk(addr_t taddr, size_t nbytes, const void* src) override;\n  void read_chunk(addr_t taddr, size_t nbytes, void* dst) override;\n  void load_program() {\n    switch_to_target();\n    is_loadmem = has_loadmem;\n    tsi_t::load_program();\n    is_loadmem = false;\n  }\n  void idle() { switch_to_target(); }\n\n protected:\n  virtual void load_mem_write(addr_t taddr, size_t nbytes, const void* src) { };\n  virtual void load_mem_read(addr_t taddr, size_t nbytes, void* dst) { };\n  void reset() override;\n  bool has_loadmem;\n\n private:\n\n  bool is_loadmem;\n  bool write_hart0_msip;\n  std::vector<std::pair<uint64_t, uint32_t>> init_writes;\n};\n#endif\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.plusarg_reader_144",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimDRAM",
    "name":"SimDRAM.v",
    "text":"import \"DPI-C\" function chandle memory_init\n(\n  input longint mem_size,\n  input longint word_size,\n  input longint line_size,\n  input longint id_bits,\n  input longint clock_hz\n);\n\nimport \"DPI-C\" function void memory_tick\n(\n  input  chandle channel,\n\n  input  bit     reset,\n\n  input  bit     ar_valid,\n  output bit     ar_ready,\n  input  int     ar_addr,\n  input  int     ar_id,\n  input  int     ar_size,\n  input  int     ar_len,\n\n  input  bit     aw_valid,\n  output bit     aw_ready,\n  input  int     aw_addr,\n  input  int     aw_id,\n  input  int     aw_size,\n  input  int     aw_len,\n\n  input  bit     w_valid,\n  output bit     w_ready,\n  input  int     w_strb,\n  input  longint w_data,\n  input  bit     w_last,\n\n  output bit     r_valid,\n  input  bit     r_ready,\n  output int     r_id,\n  output int     r_resp,\n  output longint r_data,\n  output bit     r_last,\n\n  output bit     b_valid,\n  input  bit     b_ready,\n  output int     b_id,\n  output int     b_resp\n);\n\nmodule SimDRAM #(\n    parameter ADDR_BITS=32, DATA_BITS = 64, ID_BITS = 5,\n              MEM_SIZE = 1000 * 1000 * 1000,\n              LINE_SIZE = 64,\n              WORD_SIZE = DATA_BITS/8,\n              CLOCK_HZ = 100000,\n              STRB_BITS=DATA_BITS/8)(\n  input                  clock,\n  input                  reset,\n  output                 axi_aw_ready,\n  input                  axi_aw_valid,\n  input  [ADDR_BITS-1:0] axi_aw_bits_addr,\n  input  [7:0]           axi_aw_bits_len,\n  input  [2:0]           axi_aw_bits_size,\n  input  [1:0]           axi_aw_bits_burst,\n  input                  axi_aw_bits_lock,\n  input  [3:0]           axi_aw_bits_cache,\n  input  [2:0]           axi_aw_bits_prot,\n  input  [3:0]           axi_aw_bits_qos,\n  input  [ID_BITS-1:0]   axi_aw_bits_id,\n  output                 axi_w_ready,\n  input                  axi_w_valid,\n  input  [DATA_BITS-1:0] axi_w_bits_data,\n  input                  axi_w_bits_last,\n  input  [STRB_BITS-1:0] axi_w_bits_strb,\n  input                  axi_b_ready,\n  output                 axi_b_valid,\n  output [1:0]           axi_b_bits_resp,\n  output [ID_BITS-1:0]   axi_b_bits_id,\n  output                 axi_ar_ready,\n  input                  axi_ar_valid,\n  input  [ADDR_BITS-1:0] axi_ar_bits_addr,\n  input  [7:0]           axi_ar_bits_len,\n  input  [2:0]           axi_ar_bits_size,\n  input  [1:0]           axi_ar_bits_burst,\n  input                  axi_ar_bits_lock,\n  input  [3:0]           axi_ar_bits_cache,\n  input  [2:0]           axi_ar_bits_prot,\n  input  [3:0]           axi_ar_bits_qos,\n  input  [ID_BITS-1:0]   axi_ar_bits_id,\n  input                  axi_r_ready,\n  output                 axi_r_valid,\n  output [1:0]           axi_r_bits_resp,\n  output [DATA_BITS-1:0] axi_r_bits_data,\n  output                 axi_r_bits_last,\n  output [ID_BITS-1:0]   axi_r_bits_id\n);\n\n  reg initialized = 1'b0;\n  chandle channel;\n\n  wire __ar_valid;\n  wire [31:0] __ar_addr;\n  wire [31:0] __ar_id;\n  wire [31:0] __ar_size;\n  wire [31:0] __ar_len;\n\n  wire __aw_valid;\n  wire [31:0] __aw_addr;\n  wire [31:0] __aw_id;\n  wire [31:0] __aw_size;\n  wire [31:0] __aw_len;\n\n  wire __w_valid;\n  wire [31:0] __w_strb;\n  wire [63:0] __w_data;\n  wire        __w_last;\n\n  wire __r_ready;\n  wire __b_ready;\n\n  bit __ar_ready;\n  bit __aw_ready;\n  bit __w_ready;\n  bit __r_valid;\n  int __r_id;\n  int __r_resp;\n  longint __r_data;\n  bit __r_last;\n  bit __b_valid;\n  int __b_id;\n  int __b_resp;\n\n  reg __ar_ready_reg;\n  reg __aw_ready_reg;\n  reg __w_ready_reg;\n  reg __r_valid_reg;\n  reg [ID_BITS-1:0] __r_id_reg;\n  reg [1:0] __r_resp_reg;\n  reg [DATA_BITS-1:0] __r_data_reg;\n  reg __r_last_reg;\n  reg __b_valid_reg;\n  reg [ID_BITS-1:0] __b_id_reg;\n  reg [1:0] __b_resp_reg;\n\n  always @(posedge clock) begin\n    if (reset) begin\n      __ar_ready = 1'b0;\n      __aw_ready = 1'b0;\n      __w_ready  = 1'b0;\n      __r_valid  = 1'b0;\n      __b_valid  = 1'b0;\n\n      __ar_ready_reg <= 1'b0;\n      __aw_ready_reg <= 1'b0;\n      __w_ready_reg  <= 1'b0;\n      __r_valid_reg  <= 1'b0;\n      __b_valid_reg  <= 1'b0;\n    end else begin\n      if (!initialized) begin\n        channel = memory_init(MEM_SIZE, WORD_SIZE, LINE_SIZE, ID_BITS, CLOCK_HZ);\n        initialized = 1'b1;\n      end\n\n      memory_tick(\n        channel,\n\n        reset,\n\n        __ar_valid,\n        __ar_ready,\n        __ar_addr,\n        __ar_id,\n        __ar_size,\n        __ar_len,\n\n        __aw_valid,\n        __aw_ready,\n        __aw_addr,\n        __aw_id,\n        __aw_size,\n        __aw_len,\n\n        __w_valid,\n        __w_ready,\n        __w_strb,\n        __w_data,\n        __w_last,\n\n        __r_valid,\n        __r_ready,\n        __r_id,\n        __r_resp,\n        __r_data,\n        __r_last,\n\n        __b_valid,\n        __b_ready,\n        __b_id,\n        __b_resp);\n\n        __ar_ready_reg <= __ar_ready;\n        __aw_ready_reg <= __aw_ready;\n        __w_ready_reg  <= __w_ready;\n\n        __r_valid_reg <= __r_valid;\n        __r_id_reg    <= __r_id[ID_BITS-1:0];\n        __r_resp_reg  <= __r_resp[1:0];\n        __r_data_reg  <= __r_data;\n        __r_last_reg  <= __r_last;\n\n        __b_valid_reg <= __b_valid;\n        __b_id_reg    <= __b_id[ID_BITS-1:0];\n        __b_resp_reg  <= __b_resp[1:0];\n    end\n  end\n\n  /* verilator lint_off WIDTH */\n\n  assign __ar_valid = axi_ar_valid;\n  assign __ar_addr  = axi_ar_bits_addr;\n  assign __ar_id    = axi_ar_bits_id;\n  assign __ar_size  = axi_ar_bits_size;\n  assign __ar_len   = axi_ar_bits_len;\n\n  assign __aw_valid = axi_aw_valid;\n  assign __aw_addr  = axi_aw_bits_addr;\n  assign __aw_id    = axi_aw_bits_id;\n  assign __aw_size  = axi_aw_bits_size;\n  assign __aw_len   = axi_aw_bits_len;\n\n  assign __w_valid = axi_w_valid;\n  assign __w_strb  = axi_w_bits_strb;\n  assign __w_data  = axi_w_bits_data;\n  assign __w_last  = axi_w_bits_last;\n\n  assign __r_ready = axi_r_ready;\n  assign __b_ready = axi_b_ready;\n\n  assign axi_ar_ready = __ar_ready_reg;\n  assign axi_aw_ready = __aw_ready_reg;\n  assign axi_w_ready = __w_ready_reg;\n  assign axi_r_valid = __r_valid_reg;\n  assign axi_r_bits_id = __r_id_reg;\n  assign axi_r_bits_resp = __r_resp_reg;\n  assign axi_r_bits_data = __r_data_reg;\n  assign axi_r_bits_last = __r_last_reg;\n  assign axi_b_valid = __b_valid_reg;\n  assign axi_b_bits_id = __b_id_reg;\n  assign axi_b_bits_resp = __b_resp_reg;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimDRAM",
    "name":"SimDRAM.cc",
    "text":"\n#include <vpi_user.h>\n#include <svdpi.h>\n#include <stdint.h>\n\n#include \"mm_dramsim2.h\"\n\nint dramsim = -1;\nunsigned long loadmem_addr = 0;\nstd::string ini_dir = \"dramsim2_ini\";\nstd::string loadmem_file = \"\";\n\nextern \"C\" void *memory_init(\n        long long int mem_size,\n        long long int word_size,\n        long long int line_size,\n        long long int id_bits,\n        long long int clock_hz\n\t\t\t     )\n{\n    mm_t *mm;\n    s_vpi_vlog_info info;\n\n    if (dramsim < 0) {\n        if (!vpi_get_vlog_info(&info))\n            abort();\n\n        dramsim = 0;\n        for (int i = 1; i < info.argc; i++) {\n            std::string arg(info.argv[i]);\n\n            if (arg == \"+dramsim\")\n                dramsim = 1;\n            if (arg.find(\"+dramsim_ini_dir=\") == 0)\n                ini_dir = arg.substr(strlen(\"+dramsim_ini_dir=\"));\n            if (arg.find(\"+loadmem_addr=\") == 0)\n                loadmem_addr = stol(arg.substr(strlen(\"+loadmem_addr=\")), NULL, 16);\n            if (arg.find(\"+loadmem=\") == 0)\n                loadmem_file = arg.substr(strlen(\"+loadmem=\"));\n        }\n    }\n\n    if (dramsim)\n        mm = (mm_t *) (new mm_dramsim2_t(ini_dir, 1 << id_bits, clock_hz));\n    else\n        mm = (mm_t *) (new mm_magic_t);\n\n    mm->init(mem_size, word_size, line_size);\n    if (loadmem_file != \"\")\n        mm->load_mem(loadmem_addr, loadmem_file.c_str());\n\n    return mm;\n}\n\nextern \"C\" void memory_tick(\n        void *channel,\n\n        unsigned char reset,\n\n        unsigned char ar_valid,\n        unsigned char *ar_ready,\n        int ar_addr,\n        int ar_id,\n        int ar_size,\n        int ar_len,\n\n        unsigned char aw_valid,\n        unsigned char *aw_ready,\n        int aw_addr,\n        int aw_id,\n        int aw_size,\n        int aw_len,\n\n        unsigned char w_valid,\n        unsigned char *w_ready,\n        int w_strb,\n        long long w_data,\n        unsigned char w_last,\n\n        unsigned char *r_valid,\n        unsigned char r_ready,\n        int *r_id,\n        int *r_resp,\n        long long *r_data,\n        unsigned char *r_last,\n\n        unsigned char *b_valid,\n        unsigned char b_ready,\n        int *b_id,\n        int *b_resp)\n{\n    mm_t *mm = (mm_t *) channel;\n\n    mm->tick(\n        reset,\n\n        ar_valid,\n        ar_addr,\n        ar_id,\n        ar_size,\n        ar_len,\n\n        aw_valid,\n        aw_addr,\n        aw_id,\n        aw_size,\n        aw_len,\n\n        w_valid,\n        w_strb,\n        &w_data,\n        w_last,\n\n        r_ready,\n        b_ready);\n\n    *ar_ready = mm->ar_ready();\n    *aw_ready = mm->aw_ready();\n    *w_ready = mm->w_ready();\n    *r_valid = mm->r_valid();\n    *r_id = mm->r_id();\n    *r_resp = mm->r_resp();\n    *r_data = *((long *) mm->r_data());\n    *r_last = mm->r_last();\n    *b_valid = mm->b_valid();\n    *b_id = mm->b_id();\n    *b_resp = mm->b_resp();\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimDRAM",
    "name":"mm.cc",
    "text":"// See LICENSE for license details.\n\n#include \"mm.h\"\n#include <iostream>\n#include <fstream>\n#include <cstdlib>\n#include <cstring>\n#include <cassert>\n#include <sys/mman.h>\n\nvoid mm_t::write(uint64_t addr, uint8_t *data, uint64_t strb, uint64_t size)\n{\n  auto max_strb_bytes = sizeof(uint64_t) * 8;\n  assert(size <= max_strb_bytes); // Ensure the strb is wide enough to support the desired transaction\n  if (size != max_strb_bytes) {\n    strb &= ((1 << size) - 1) << (addr % word_size);\n  }\n  addr %= this->size;\n\n  uint8_t *base = this->data + (addr / word_size) * word_size;\n  for (int i = 0; i < word_size; i++) {\n    if (strb & 1)\n      base[i] = data[i];\n    strb >>= 1;\n  }\n}\n\nstd::vector<char> mm_t::read(uint64_t addr)\n{\n  addr %= this->size;\n\n  uint8_t *base = this->data + addr;\n  return std::vector<char>(base, base + word_size);\n}\n\nvoid mm_t::init(size_t sz, int wsz, int lsz)\n{\n  assert(wsz > 0 && lsz > 0 && (lsz & (lsz-1)) == 0 && lsz % wsz == 0);\n  word_size = wsz;\n  line_size = lsz;\n  data = (uint8_t *) mmap(\n          NULL, sz, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS, -1, 0);\n  if (data == MAP_FAILED) {\n    std::perror(\"[mm_t] mmap for backing storage failed\");\n    exit(-1);\n  }\n\n  size = sz;\n}\n\nmm_t::~mm_t()\n{\n  munmap(data, this->size);\n}\n\nvoid mm_magic_t::init(size_t sz, int wsz, int lsz)\n{\n  mm_t::init(sz, wsz, lsz);\n  dummy_data.resize(word_size);\n}\n\nvoid mm_magic_t::tick(\n  bool reset,\n\n  bool ar_valid,\n  uint64_t ar_addr,\n  uint64_t ar_id,\n  uint64_t ar_size,\n  uint64_t ar_len,\n\n  bool aw_valid,\n  uint64_t aw_addr,\n  uint64_t aw_id,\n  uint64_t aw_size,\n  uint64_t aw_len,\n\n  bool w_valid,\n  uint64_t w_strb,\n  void *w_data,\n  bool w_last,\n\n  bool r_ready,\n  bool b_ready)\n{\n  bool ar_fire = !reset && ar_valid && ar_ready();\n  bool aw_fire = !reset && aw_valid && aw_ready();\n  bool w_fire  = !reset && w_valid && w_ready();\n  bool r_fire  = !reset && r_valid() && r_ready;\n  bool b_fire  = !reset && b_valid() && b_ready;\n\n  if (ar_fire) {\n    uint64_t start_addr = (ar_addr / word_size) * word_size;\n    for (int i = 0; i <= ar_len; i++) {\n      auto dat = read(start_addr + i * word_size);\n      rresp.push(mm_rresp_t(ar_id, dat, i == ar_len));\n    }\n  }\n\n  if (aw_fire) {\n    store_addr = aw_addr;\n    store_id = aw_id;\n    store_count = aw_len + 1;\n    store_size = 1 << aw_size;\n    store_inflight = true;\n  }\n\n  if (w_fire) {\n    write(store_addr, (uint8_t *) w_data, w_strb, store_size);\n    store_addr += store_size;\n    store_count--;\n\n    if (store_count == 0) {\n      store_inflight = false;\n      bresp.push(store_id);\n      assert(w_last);\n    }\n  }\n\n  if (b_fire)\n    bresp.pop();\n\n  if (r_fire)\n    rresp.pop();\n\n  cycle++;\n\n  if (reset) {\n    while (!bresp.empty()) bresp.pop();\n    while (!rresp.empty()) rresp.pop();\n    cycle = 0;\n  }\n}\n\nvoid mm_t::load_mem(unsigned long start, const char *fname)\n{\n  std::string line;\n  std::ifstream in(fname);\n  unsigned long fsize = 0;\n\n  if (!in.is_open()) {\n    fprintf(stderr, \"Couldn't open loadmem file %s\\n\", fname);\n    abort();\n  }\n\n  while (std::getline(in, line))\n  {\n    #define parse_nibble(c) ((c) >= 'a' ? (c)-'a'+10 : (c)-'0')\n    for (ssize_t i = line.length()-2, j = 0; i >= 0; i -= 2, j++) {\n      char byte = (parse_nibble(line[i]) << 4) | parse_nibble(line[i+1]);\n      ssize_t addr = (start + j) % size;\n      data[addr] = byte;\n    }\n    start += line.length()/2;\n    fsize += line.length()/2;\n\n    if (fsize > this->size) {\n      fprintf(stderr, \"Loadmem file is too large\\n\");\n      abort();\n    }\n  }\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimDRAM",
    "name":"mm.h",
    "text":"// See LICENSE for license details.\n\n#ifndef MM_EMULATOR_H\n#define MM_EMULATOR_H\n\n#include <stdint.h>\n#include <cstring>\n#include <queue>\n\nclass mm_t\n{\n public:\n  mm_t() : data(0), size(0) {}\n\n  virtual void init(size_t sz, int word_size, int line_size);\n\n  virtual bool ar_ready() = 0;\n  virtual bool aw_ready() = 0;\n  virtual bool w_ready() = 0;\n  virtual bool b_valid() = 0;\n  virtual uint64_t b_resp() = 0;\n  virtual uint64_t b_id() = 0;\n  virtual bool r_valid() = 0;\n  virtual uint64_t r_resp() = 0;\n  virtual uint64_t r_id() = 0;\n  virtual void *r_data() = 0;\n  virtual bool r_last() = 0;\n\n  virtual void tick\n  (\n    bool reset,\n\n    bool ar_valid,\n    uint64_t ar_addr,\n    uint64_t ar_id,\n    uint64_t ar_size,\n    uint64_t ar_len,\n\n    bool aw_valid,\n    uint64_t aw_addr,\n    uint64_t aw_id,\n    uint64_t aw_size,\n    uint64_t aw_len,\n\n    bool w_valid,\n    uint64_t w_strb,\n    void *w_data,\n    bool w_last,\n\n    bool r_ready,\n    bool b_ready\n  ) = 0;\n\n  virtual void* get_data() { return data; }\n  virtual size_t get_size() { return size; }\n  virtual size_t get_word_size() { return word_size; }\n  virtual size_t get_line_size() { return line_size; }\n\n  void write(uint64_t addr, uint8_t *data, uint64_t strb, uint64_t size);\n  std::vector<char> read(uint64_t addr);\n\n  virtual ~mm_t();\n\n  void load_mem(unsigned long start, const char *fname);\n\n protected:\n  uint8_t* data;\n  size_t size;\n  int word_size;\n  int line_size;\n};\n\nstruct mm_rresp_t\n{\n  uint64_t id;\n  std::vector<char> data;\n  bool last;\n\n  mm_rresp_t(uint64_t id, std::vector<char> data, bool last)\n  {\n    this->id = id;\n    this->data = data;\n    this->last = last;\n  }\n\n  mm_rresp_t()\n  {\n    this->id = 0;\n    this->last = false;\n  }\n};\n\nclass mm_magic_t : public mm_t\n{\n public:\n  mm_magic_t() : store_inflight(false) {}\n\n  virtual void init(size_t sz, int word_size, int line_size);\n\n  virtual bool ar_ready() { return true; }\n  virtual bool aw_ready() { return !store_inflight; }\n  virtual bool w_ready() { return store_inflight; }\n  virtual bool b_valid() { return !bresp.empty(); }\n  virtual uint64_t b_resp() { return 0; }\n  virtual uint64_t b_id() { return b_valid() ? bresp.front() : 0; }\n  virtual bool r_valid() { return !rresp.empty(); }\n  virtual uint64_t r_resp() { return 0; }\n  virtual uint64_t r_id() { return r_valid() ? rresp.front().id: 0; }\n  virtual void *r_data() { return r_valid() ? &rresp.front().data[0] : &dummy_data[0]; }\n  virtual bool r_last() { return r_valid() ? rresp.front().last : false; }\n\n  virtual void tick\n  (\n    bool reset,\n\n    bool ar_valid,\n    uint64_t ar_addr,\n    uint64_t ar_id,\n    uint64_t ar_size,\n    uint64_t ar_len,\n\n    bool aw_valid,\n    uint64_t aw_addr,\n    uint64_t aw_id,\n    uint64_t aw_size,\n    uint64_t aw_len,\n\n    bool w_valid,\n    uint64_t w_strb,\n    void *w_data,\n    bool w_last,\n\n    bool r_ready,\n    bool b_ready\n  );\n\n protected:\n  bool store_inflight;\n  uint64_t store_addr;\n  uint64_t store_id;\n  uint64_t store_size;\n  uint64_t store_count;\n  std::vector<char> dummy_data;\n  std::queue<uint64_t> bresp;\n\n  std::queue<mm_rresp_t> rresp;\n\n  uint64_t cycle;\n};\n\n#endif\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimDRAM",
    "name":"mm_dramsim2.cc",
    "text":"// See LICENSE for license details.\n\n#include \"mm_dramsim2.h\"\n#include \"mm.h\"\n#include <iostream>\n#include <fstream>\n#include <list>\n#include <queue>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n\n//#define DEBUG_DRAMSIM2\n\nusing namespace DRAMSim;\n\nvoid mm_dramsim2_t::read_complete(unsigned id, uint64_t address, uint64_t clock_cycle)\n{\n  assert(!rreq[address].empty());\n  auto req = rreq[address].front();\n  uint64_t start_addr = (req.addr / word_size) * word_size;\n  for (size_t i = 0; i < req.len; i++) {\n    auto dat = read(start_addr + i * word_size);\n    rresp.push(mm_rresp_t(req.id, dat, (i == req.len - 1)));\n  }\n  read_id_busy[req.id] = false;\n  rreq[address].pop();\n}\n\nvoid mm_dramsim2_t::write_complete(unsigned id, uint64_t address, uint64_t clock_cycle)\n{\n  assert(!wreq[address].empty());\n  auto b_id = wreq[address].front();\n  bresp.push(b_id);\n  write_id_busy[b_id] = false;\n  wreq[address].pop();\n}\n\nvoid power_callback(double a, double b, double c, double d)\n{\n    //fprintf(stderr, \"power callback: %0.3f, %0.3f, %0.3f, %0.3f\\n\",a,b,c,d);\n}\n\nvoid mm_dramsim2_t::init(size_t sz, int wsz, int lsz)\n{\n  assert(lsz == 64); // assumed by dramsim2\n  mm_t::init(sz, wsz, lsz);\n\n  dummy_data.resize(word_size);\n\n  assert(size % (1024*1024) == 0);\n  mem = getMemorySystemInstance(memory_ini, system_ini, ini_dir, \"results\", size/(1024*1024));\n  mem->setCPUClockSpeed(clock_hz);\n  TransactionCompleteCB *read_cb = new Callback<mm_dramsim2_t, void, unsigned, uint64_t, uint64_t>(this, &mm_dramsim2_t::read_complete);\n  TransactionCompleteCB *write_cb = new Callback<mm_dramsim2_t, void, unsigned, uint64_t, uint64_t>(this, &mm_dramsim2_t::write_complete);\n  mem->RegisterCallbacks(read_cb, write_cb, power_callback);\n\n#ifdef DEBUG_DRAMSIM2\n  fprintf(stderr,\"Dramsim2 init successful\\n\");\n#endif\n}\n\nbool mm_dramsim2_t::ar_ready() {\n  return mem->willAcceptTransaction();\n}\n\nbool mm_dramsim2_t::aw_ready() {\n  return mem->willAcceptTransaction() && !store_inflight;\n}\n\nvoid mm_dramsim2_t::tick(\n  bool reset,\n\n  bool ar_valid,\n  uint64_t ar_addr,\n  uint64_t ar_id,\n  uint64_t ar_size,\n  uint64_t ar_len,\n\n  bool aw_valid,\n  uint64_t aw_addr,\n  uint64_t aw_id,\n  uint64_t aw_size,\n  uint64_t aw_len,\n\n  bool w_valid,\n  uint64_t w_strb,\n  void *w_data,\n  bool w_last,\n\n  bool r_ready,\n  bool b_ready)\n{\n  bool ar_fire = !reset && ar_valid && ar_ready();\n  bool aw_fire = !reset && aw_valid && aw_ready();\n  bool w_fire = !reset && w_valid && w_ready();\n  bool r_fire = !reset && r_valid() && r_ready;\n  bool b_fire = !reset && b_valid() && b_ready;\n\n  if (mem->willAcceptTransaction()) {\n    for (auto it = rreq_queue.begin(); it != rreq_queue.end(); it++) {\n      if (!read_id_busy[it->id]) {\n        read_id_busy[it->id] = true;\n        auto transaction = *it;\n        rreq[transaction.addr].push(transaction);\n        mem->addTransaction(false, transaction.addr);\n        rreq_queue.erase(it);\n        break;\n      }\n    }\n  }\n\n  if (ar_fire) {\n    rreq_queue.push_back(mm_req_t(ar_id, 1 << ar_size, ar_len + 1, ar_addr));\n  }\n\n  if (aw_fire) {\n    store_addr = aw_addr;\n    store_id = aw_id;\n    store_count = aw_len + 1;\n    store_size = 1 << aw_size;\n    store_inflight = true;\n  }\n\n  if (w_fire) {\n    write(store_addr, (uint8_t*)w_data, w_strb, store_size);\n    store_addr += store_size;\n    store_count--;\n\n    if (store_count == 0) {\n      store_inflight = false;\n      mem->addTransaction(true, store_addr);\n      wreq[store_addr].push(store_id);\n      assert(w_last);\n    }\n  }\n\n  if (b_fire)\n    bresp.pop();\n\n  if (r_fire)\n    rresp.pop();\n\n  mem->update();\n  cycle++;\n\n  if (reset) {\n    while (!bresp.empty()) bresp.pop();\n    while (!rresp.empty()) rresp.pop();\n    cycle = 0;\n  }\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimDRAM",
    "name":"mm_dramsim2.h",
    "text":"// See LICENSE for license details.\n\n#ifndef _MM_EMULATOR_DRAMSIM2_H\n#define _MM_EMULATOR_DRAMSIM2_H\n\n#include \"mm.h\"\n#include <DRAMSim.h>\n#include <map>\n#include <queue>\n#include <list>\n#include <stdint.h>\n\nstruct mm_req_t {\n  uint64_t id;\n  uint64_t size;\n  uint64_t len;\n  uint64_t addr;\n\n  mm_req_t(uint64_t id, uint64_t size, uint64_t len, uint64_t addr)\n  {\n    this->id = id;\n    this->size = size;\n    this->len = len;\n    this->addr = addr;\n  }\n\n  mm_req_t()\n  {\n    this->id = 0;\n    this->size = 0;\n    this->len = 0;\n    this->addr = 0;\n  }\n};\n\nclass mm_dramsim2_t : public mm_t\n{\n public:\n  mm_dramsim2_t(int axi4_ids) : \n      read_id_busy(axi4_ids, false),\n      write_id_busy(axi4_ids, false) {};\n  mm_dramsim2_t(std::string ini_dir, int axi4_ids, uint64_t clock_hz = 0) :\n      ini_dir(ini_dir),\n      read_id_busy(axi4_ids, false),\n      write_id_busy(axi4_ids, false),\n      clock_hz(clock_hz) {};\n  mm_dramsim2_t(std::string memory_ini, std::string system_ini, std::string ini_dir, int axi4_ids) :\n      memory_ini(memory_ini),\n      system_ini(system_ini),\n      ini_dir(ini_dir),\n      read_id_busy(axi4_ids, false),\n      write_id_busy(axi4_ids, false) {};\n\n  virtual void init(size_t sz, int word_size, int line_size);\n\n  virtual bool ar_ready();\n  virtual bool aw_ready();\n  virtual bool w_ready() { return store_inflight; }\n  virtual bool b_valid() { return !bresp.empty(); }\n  virtual uint64_t b_resp() { return 0; }\n  virtual uint64_t b_id() { return b_valid() ? bresp.front() : 0; }\n  virtual bool r_valid() { return !rresp.empty(); }\n  virtual uint64_t r_resp() { return 0; }\n  virtual uint64_t r_id() { return r_valid() ? rresp.front().id: 0; }\n  virtual void *r_data() { return r_valid() ? &rresp.front().data[0] : &dummy_data[0]; }\n  virtual bool r_last() { return r_valid() ? rresp.front().last : false; }\n\n  virtual void tick\n  (\n    bool reset,\n\n    bool ar_valid,\n    uint64_t ar_addr,\n    uint64_t ar_id,\n    uint64_t ar_size,\n    uint64_t ar_len,\n\n    bool aw_valid,\n    uint64_t aw_addr,\n    uint64_t aw_id,\n    uint64_t aw_size,\n    uint64_t aw_len,\n\n    bool w_valid,\n    uint64_t w_strb,\n    void *w_data,\n    bool w_last,\n\n    bool r_ready,\n    bool b_ready\n  );\n\n\n protected:\n  DRAMSim::MultiChannelMemorySystem *mem;\n  uint64_t cycle;\n\n  bool store_inflight = false;\n  std::string memory_ini = \"DDR3_micron_64M_8B_x4_sg15.ini\";\n  std::string system_ini = \"system.ini\";\n  std::string ini_dir = \"dramsim2_ini\";\n\n  uint64_t store_addr;\n  uint64_t store_id;\n  uint64_t store_size;\n  uint64_t store_count;\n  std::vector<char> dummy_data;\n  std::queue<uint64_t> bresp;\n\n  // Keep a FIFO of IDs that made reads to an address since Dramsim2 doesn't\n  // track it. Reads or writes to the same address from different IDs can\n  // collide\n  std::map<uint64_t, std::queue<uint64_t>> wreq;\n  std::map<uint64_t, std::queue<mm_req_t>> rreq;\n  std::queue<mm_rresp_t> rresp;\n  //std::map<uint64_t, std::queue<mm_rresp_t> > rreq;\n\n\n  // Track inflight requests by putting indexes to their positions in the\n  // stimulus vector in queues for each AXI channel\n  std::vector<bool> read_id_busy;\n  std::vector<bool> write_id_busy;\n  std::list<mm_req_t> rreq_queue;\n\n  uint64_t clock_hz = 0;\n\n  void read_complete(unsigned id, uint64_t address, uint64_t clock_cycle);\n  void write_complete(unsigned id, uint64_t address, uint64_t clock_cycle);\n};\n\n#endif\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimUART",
    "name":"SimUART.v",
    "text":"`define DATA_WIDTH 8\n\nimport \"DPI-C\" function void uart_init(\n    input  string  filename,\n    input  int     uartno\n);\n\nimport \"DPI-C\" function void uart_tick\n(\n    input  bit     serial_out_valid,\n    output bit     serial_out_ready,\n    input  byte    serial_out_bits,\n\n    output bit     serial_in_valid,\n    input  bit     serial_in_ready,\n    output byte    serial_in_bits\n);\n\nmodule SimUART #(UARTNO) (\n    input              clock,\n    input              reset,\n\n    input                    serial_out_valid,\n    output                   serial_out_ready,\n    input  [`DATA_WIDTH-1:0] serial_out_bits,\n\n    output                   serial_in_valid,\n    input                    serial_in_ready,\n    output [`DATA_WIDTH-1:0] serial_in_bits\n);\n\n    bit __in_valid;\n    bit __out_ready;\n    byte __in_bits;\n    string __uartlog;\n    int __uartno;\n\n    initial begin\n        $value$plusargs(\"uartlog=%s\", __uartlog);\n        uart_init(__uartlog, __uartno);\n    end\n\n    reg __in_valid_reg;\n    reg __out_ready_reg;\n    reg [`DATA_WIDTH-1:0] __in_bits_reg;\n\n    assign serial_in_valid  = __in_valid_reg;\n    assign serial_in_bits   = __in_bits_reg;\n    assign serial_out_ready = __out_ready_reg;\n\n    // Evaluate the signals on the positive edge\n    always @(posedge clock) begin\n        if (reset) begin\n            __in_valid = 0;\n            __out_ready = 0;\n\n            __in_valid_reg <= 0;\n            __in_bits_reg <= 0;\n            __out_ready_reg <= 0;\n            __uartno = UARTNO;\n        end else begin\n            uart_tick(\n                serial_out_valid,\n                __out_ready,\n                serial_out_bits,\n                __in_valid,\n                serial_in_ready,\n                __in_bits\n            );\n\n            __out_ready_reg <= __out_ready;\n            __in_valid_reg  <= __in_valid;\n            __in_bits_reg   <= __in_bits;\n        end\n    end\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimUART",
    "name":"SimUART.cc",
    "text":"#include <vpi_user.h>\n#include <svdpi.h>\n\n#include <stdio.h>\n#include <string.h>\n\n#include \"uart.h\"\n\nuart_t *uart = NULL;\n\nextern \"C\" void uart_init(\n        const char *filename,\n        int uartno)\n{\n    if (strlen(filename) != 0)\n        uart = new uart_t(filename, uartno);\n    else\n        uart = new uart_t(0, uartno);\n}\n\nextern \"C\" void uart_tick(\n        unsigned char out_valid,\n        unsigned char *out_ready,\n        char out_bits,\n\n        unsigned char *in_valid,\n        unsigned char in_ready,\n        char *in_bits)\n{\n    if (uart == NULL) {\n        *out_ready = 0;\n        *in_valid = 0;\n        return;\n    }\n\n    uart->tick(\n        out_valid,\n        out_ready,\n        out_bits,\n\n        in_valid,\n        in_ready,\n        in_bits);\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimUART",
    "name":"uart.cc",
    "text":"//See LICENSE for license details\n\n#include \"uart.h\"\n#include <sys/stat.h>\n#include <fcntl.h>\n\n#define _XOPEN_SOURCE\n#include <stdlib.h>\n#include <stdio.h>\n\n#ifndef _WIN32\n#include <unistd.h>\n\n// name length limit for ptys\n#define PTYNAMELEN 256\n\n/* There is no \"backpressure\" to the user input for sigs. only one at a time\n * non-zero value represents unconsumed special char input.\n *\n * Reset to zero once consumed.\n */\n\n// This is fine for multiple UARTs because UARTs > uart 0 will use pty, not stdio\nchar specialchar = 0;\n\nvoid sighand(int s) {\n    switch (s) {\n        case SIGINT:\n            // ctrl-c\n            specialchar = 0x3;\n            break;\n        default:\n            specialchar = 0x0;\n    }\n}\n#else\n#warning \"The UARTAdapter is untested with Windows. Many features expected to be broken.\"\n#endif\n\nuart_t::uart_t(const char* filename_prefix, int uartno)\n{\n    this->inputfd = 0;\n    this->outputfd = 0;\n    this->print_file = false;\n\n    if (uartno == 0) {\n        // signal handler so ctrl-c doesn't kill simulation when UART is attached\n        // to stdin/stdout\n        struct sigaction sigIntHandler;\n        sigIntHandler.sa_handler = sighand;\n        sigemptyset(&sigIntHandler.sa_mask);\n        sigIntHandler.sa_flags = 0;\n        sigaction(SIGINT, &sigIntHandler, NULL);\n        if (filename_prefix)\n            printf(\"[UART] UART0 is here (stdin).\\n\");\n        else\n            printf(\"[UART] UART0 is here (stdin/stdout).\\n\");\n        this->inputfd = STDIN_FILENO;\n        this->outputfd = STDOUT_FILENO;\n    } else {\n        // for UARTs that are not UART0, use a PTY\n        char ptyname[PTYNAMELEN];\n        int ptyfd = posix_openpt(O_RDWR | O_NOCTTY);\n        grantpt(ptyfd);\n        unlockpt(ptyfd);\n        ptsname_r(ptyfd, ptyname, PTYNAMELEN);\n\n        // create symlink for reliable location to find uart pty\n        std::string symlinkname = std::string(\"uartpty\") + std::to_string(uartno);\n        // remove in case symlink already exists\n        remove(symlinkname.c_str());\n        if(symlink(ptyname, symlinkname.c_str())) {\n            printf(\"[UART_ERR] Failed to created symlink with ptyname %s to symlink name %s\\n\", ptyname, symlinkname.c_str());\n            exit(1);\n        }\n        printf(\"[UART] UART%d is on PTY: %s, symlinked at %s\\n\", uartno, ptyname, symlinkname.c_str());\n        printf(\"[UART] Attach to this UART with 'sudo screen %s' or 'sudo screen %s'\\n\", ptyname, symlinkname.c_str());\n        this->inputfd = ptyfd;\n        this->outputfd = ptyfd;\n    }\n\n    // if filename exists then put to file\n    if (filename_prefix) {\n        print_file = true;\n        std::string uartlogname = std::string(filename_prefix) + std::to_string(uartno);\n        printf(\"[UART] UART%d stdout being redirected to file: %s\\n\", uartno, uartlogname.c_str());\n        this->outputfd = open(uartlogname.c_str(), O_RDWR | O_CREAT, 0644);\n    }\n\n    // Don't block on reads if there is nothing typed in\n    fcntl(inputfd, F_SETFL, fcntl(inputfd, F_GETFL) | O_NONBLOCK);\n}\n\nuart_t::~uart_t() {\n    if (print_file)\n        close(this->outputfd);\n}\n\nvoid uart_t::tick(\n        unsigned char out_valid,\n        unsigned char *out_ready,\n        char out_bits,\n\n        unsigned char *in_valid,\n        unsigned char in_ready,\n        char *in_bits)\n{\n    *out_ready = true;\n    *in_valid = false;\n\n    if (in_ready) {\n        char inp;\n        int readamt;\n        if (specialchar) {\n            // send special character (e.g. ctrl-c)\n            // for stdin handling\n            //\n            // PTY should never trigger this\n            inp = specialchar;\n            specialchar = 0;\n            readamt = 1;\n        } else {\n            // else check if we have input\n            readamt = ::read(inputfd, &inp, 1);\n        }\n\n        if (readamt > 0) {\n            *in_bits = inp;\n            *in_valid = true;\n        }\n    }\n\n    if (*out_ready && out_valid) {\n        if (::write(outputfd, &out_bits, 1) == -1) {\n            printf(\"[UART_ERR] Failed to write to outputfd %d\\n\", outputfd);\n            exit(1);\n        }\n    }\n}\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"TestHarness.SimUART",
    "name":"uart.h",
    "text":"#ifndef __SIMUART_H\n#define __SIMUART_H\n\n#include <signal.h>\n#include <string.h>\n#include <string>\n\nclass uart_t\n{\n    public:\n        uart_t(\n            const char* filename_prefix,\n            int uartno);\n        ~uart_t();\n        void tick(\n            unsigned char out_valid,\n            unsigned char *out_ready,\n            char out_bits,\n\n            unsigned char *in_valid,\n            unsigned char in_ready,\n            char *in_bits);\n\n    private:\n        bool print_file;\n        int inputfd;\n        int outputfd;\n};\n\n#endif // __SIMUART_H\n"
  },
  {
    "class":"firrtl.stage.RunFirrtlTransformAnnotation",
    "transform":"firrtl.transforms.BlackBoxSourceHelper"
  }
]